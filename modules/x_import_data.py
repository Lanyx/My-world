import json
import pymongo                                          # For the noSQL database
import modules.x_misc as misc
#-------------------------------------------------------------------------------
def import_ruby_d():
    """ We accept the d_destinations.json file which was generated by the
    previous rendition of this program, written in Ruby. This particular one
    concentrates on the 'destinations' element, where all the 'geographics'
    have been stored."""

    # Get the file opened.
    sPath = "ruby_json/d_destinations.json"
    eRuby_json = open(sPath, "r", encoding='utf-8')          # Contains cyrillic
    jContent = None
    for x in eRuby_json:
        jContent = x

    # We are done with the file
    eRuby_json.close()

    # Parse the json.
    aContent = json.loads(jContent)

    # Create the database. At this stage, it should not exist. Hence, we can't
    # use any of the 'common' routines
    xConnect = pymongo.MongoClient("mongodb://localhost:27017/")
    aDatabase_names = xConnect.list_database_names()

    # We don't exist: create us!
    if "trembovice" not in aDatabase_names:
        ccTremb = xConnect["trembovice"]
        cDest = ccTremb["destinations"]
    else:
        print("already exists! Returning")
        return None

    ccTremb = db.connect()
    if ccTremb == None: return None

    # Carefully, move everything over into the database
    for dDest in aContent:
        dLoc = {"my_id": None}

    # Prepare the name:
        sName = dDest["name"]           # "Vïeúh / Веюх"
        aSlash = sName.split("/")       # Seperate the latin and the cyrillic
        sLatin = aSlash[0].strip()      # Clean up white-space
        sCyrillic = aSlash[1].strip()
        dName = {
            "lat": sLatin,
            # (Cyrpol is an invented language: Polish written in Cyrillic)
            "cyr": sCyrillic,
        }

    # Prepare the type
        sType = dDest["type"]           # "Municipality / Гмина [5]"
        aSlash = sType.split("/")       # Seperate the latin and the cyrillic
        sLatin = aSlash[0].strip()
        aCyr_lvl = aSlash[1].split("[")        # Гмина [5] ==> [" Гмина ", "5]"]
        sCyrillic = aCyr_lvl[0].strip()        # Clean up "Гмина"
        sLevel = aCyr_lvl[1].replace("]", " ").strip()           # "5]" ==> "5".
        dType = {
            "lat": sLatin,
            "cyr": sCyrillic,
            # What level of governance we are at, with 1 being the highest.
            "lvl": sLevel,
        }

    # Calculate the area
        aArea = dDest["aaMap"]["a"]
        fScale = dDest["aaMap"]["fScale"]
        if (aArea != None) and (fScale != None):
            dArea = misc.calc_area(aArea, fScale)

    # Workforce:
        dDemand_workforce = {
            "total":{                        # Demographics by income and gender
                "rm":0,"rf":0,"hm":0,"hf":0,"mm":0,
                "mf":0,"lm":0,"lf":0,"pm":0,"pf":0
            },
            "aItemised":[]   # Individual elements which make up the above total
        }

        dSupply_workforce = {
            "total":{                        # Demographics by income and gender
                "rm":0,"rf":0,"hm":0,"hf":0,"mm":0,
                "mf":0,"lm":0,"lf":0,"pm":0,"pf":0
            },
            "aItemised":[]   # Individual elements which make up the above total
        }

    # Households:
        dDemand_hhold = {
            "total":{"r":0,"h":0,"m":0,"l":0,"p":0},      # by income level only
            "aItemised":[]   # Individual elements which make up the above total
        }

        dSupply_hhold = {
            "total":{"r":0,"h":0,"m":0,"l":0,"p":0},      # by income level only
            "aItemised":[]   # Individual elements which make up the above total
        }

    # Start the transfer
        dLoc["my_id"] = dDest["id"]
        dLoc["aName"] = dName
        dLoc["geo_code"] = dDest["geo_code"]
        dLoc["aType"] = dType
        dLoc["sub_type"] = dDest["sub_type"]
        dLoc["parent"] = dDest["parent"]
        dLoc["aChildren"] = dDest["aChildren"]
        dLoc["aMap"] = dDest["aaMap"]                    # NOTE the name change.
        dLoc["aArea"] = dArea                                 # Calculated here.
        dLoc["aDemand_workforce"] = dDemand_workforce
#        dLoc["aSupply_workforce"] = dSupply_workforce
        dLoc["aDemand_hholds"] = dDemand_hhold
        dLoc["aSupply_hholds"] = dSupply_hhold
        dLoc["aDemographics"] = {}
        dLoc["aVehicles"] = {}
        dLoc["aFootprint"] = {}
        dLoc["aWarehouse"] = {}

        print(dLoc["geo_code"], dLoc["aName"]["lat"])
        x = cDest.insert_one(dLoc)
        dLoc.clear()

#-------------------------------------------------------------------------------
def export_python_d():
    """Writes a dpy_destinations.json file as a backup to the data-base. It just
    saves the Python dictionary directly to the file. One entry, one line."""

    # Get the file opened.
    sPath = "python_json/dpy_destinations.json"
    ePython_json = open(sPath, "w", encoding='utf-8')        # Note the encoding
    jContent = None

    # Connect and create the database
    # Default way of connecting to the database:
    xConnect = pymongo.MongoClient("mongodb://localhost:27017/")
    aDatabase_names = xConnect.list_database_names()

    # We don't exist: create us!
    if "trembovice" in aDatabase_names:
        ccTremb = xConnect["trembovice"]
        cDest = ccTremb["destinations"]
    else:
        print("Data base 'trembovice' does not exist! Returning")
        return None

    # Move the database entry out to a file
    for dEntry in cDest.find():
        # Remove the MongoDB ID; it will be re-assigned when the data base is
        # recreated.
        del dEntry["_id"]
        jEntry = json.dumps(dEntry, ensure_ascii=False)
        sTxt = "{0}\n"
        sJson = sTxt.format(jEntry)
        ePython_json.write(sJson)

    ePython_json.close()

#-------------------------------------------------------------------------------
def import_syllables():
    """ Sets up the syllables for random place-names. In Ruby, they were
    hard-coded; they are into this method. However, the method pushes them
    into the database. Personal names are also transferred here.
    """

    aSyllable = [
    # А (a)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"аб","lat":"ab"}, {"cyr":"ав","lat":"av"},
        {"cyr":"аг","lat":"ag"}, {"cyr":"ад","lat":"ad"},
        {"cyr":"адь","lat":"að"}, {"cyr":"аж","lat":"azþ"},
        {"cyr":"аз","lat":"az"}, {"cyr":"азь","lat":"azç"},
        {"cyr":"ай","lat":"í"}, {"cyr":"ак","lat":"ak"},
        {"cyr":"ал","lat":"aw"}, {"cyr":"аль","lat":"al"},
        {"cyr":"ам","lat":"am"}, {"cyr":"ан","lat":"an"},
        {"cyr":"ань","lat":"añ"}, {"cyr":"ап","lat":"ap"},
        {"cyr":"ар","lat":"ar"}, {"cyr":"ас","lat":"as"},
        {"cyr":"ась","lat":"asç"}, {"cyr":"ат","lat":"at"},
        {"cyr":"ать","lat":"atç"}, {"cyr":"аф","lat":"af"},
        {"cyr":"ах","lat":"ah"}, {"cyr":"ацщ","lat":"atså"},
        {"cyr":"ачщ","lat":"atþå"}, {"cyr":"аш","lat":"asþ"},

    # Б (b)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ба","lat":"ba"}, {"cyr":"бе","lat":"bïe"},
        {"cyr":"бё","lat":"bïo"}, {"cyr":"бжщ","lat":"bzþå"},
        {"cyr":"би","lat":"bi"}, {"cyr":"блщ","lat":"bwå"},
        {"cyr":"бль","lat":"blå"}, {"cyr":"бо","lat":"bo"},
        {"cyr":"брщ","lat":"brå"}, {"cyr":"бу","lat":"bu"},
        {"cyr":"бы","lat":"by"}, {"cyr":"бэ","lat":"be"},
        {"cyr":"бю","lat":"bú"}, {"cyr":"бя","lat":"bïa"},
    # В (v)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ва","lat":"va"}, {"cyr":"ве","lat":"vïe"},
        {"cyr":"вё","lat":"vïo"}, {"cyr":"взщ","lat":"vzå"},
        {"cyr":"ви","lat":"vi"}, {"cyr":"влщ","lat":"vwå"},
        {"cyr":"вль","lat":"vlå"}, {"cyr":"во","lat":"vo"},
        {"cyr":"врщ","lat":"vrå"}, {"cyr":"ву","lat":"vu"},
        {"cyr":"вы","lat":"vy"}, {"cyr":"вэ","lat":"ve"},
        {"cyr":"вю","lat":"vú"}, {"cyr":"вя","lat":"vïa"},
    # Г (g)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"га","lat":"ga"}, {"cyr":"гвщ","lat":"gvå"},
        {"cyr":"гдщ","lat":"gdå"}, {"cyr":"ге","lat":"gïe"},
        {"cyr":"гё","lat":"gïo"}, {"cyr":"гжщ","lat":"gzþå"},
        {"cyr":"ги","lat":"gi"}, {"cyr":"глщ","lat":"gwå"},
        {"cyr":"гль","lat":"glå"}, {"cyr":"гмщ","lat":"gmå"},
        {"cyr":"гнщ","lat":"gnå"},{"cyr":"гнь","lat":"gñå"},
        {"cyr":"го","lat":"go"}, {"cyr":"грщ","lat":"grå"},
        {"cyr":"гу","lat":"gu"}, {"cyr":"гы","lat":"gy"},
        {"cyr":"гэ","lat":"ge"}, {"cyr":"гю","lat":"gú"},
        {"cyr":"гя","lat":"gïa"},
    # Д (d)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"да","lat":"da"}, {"cyr":"дбщ","lat":"dbå"},
        {"cyr":"двщ","lat":"dwå"}, {"cyr":"дъе","lat":"dïe"},
        {"cyr":"дъё","lat":"dïo"}, {"cyr":"джщ","lat":"dzþå"},
        {"cyr":"дзь","lat":"dzç"}, {"cyr":"ди","lat":"di"},
        {"cyr":"длщ","lat":"dwå"}, {"cyr":"дль","lat":"dlå"},
        {"cyr":"днщ","lat":"dnå"},{"cyr":"днь","lat":"dñå"},
        {"cyr":"до","lat":"do"}, {"cyr":"дрщ","lat":"drå"},
        {"cyr":"ду","lat":"du"}, {"cyr":"ды","lat":"dy"},
        {"cyr":"дэ","lat":"de"}, {"cyr":"дъю","lat":"dú"},
        {"cyr":"дъя","lat":"dïa"},
    # ДЬ(th)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"де","lat":"ðe"}, {"cyr":"дё","lat":"ðo"},
        {"cyr":"дьи","lat":"ði"}, {"cyr":"дьы","lat":"ðy"},
        {"cyr":"дю","lat":"ðu"}, {"cyr":"дя","lat":"ða"},
    # Е (ye)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"е","lat":"ïe"}, {"cyr":"еб","lat":"ïeb"},
        {"cyr":"ев","lat":"ïev"}, {"cyr":"ег","lat":"ïeg"},
        {"cyr":"ед","lat":"ïed"}, {"cyr":"едь","lat":"ïeð"},
        {"cyr":"еж","lat":"ïezþ"}, {"cyr":"ез","lat":"ïez"},
        {"cyr":"езь","lat":"ïezç"}, {"cyr":"ей","lat":"ïeï"},
        {"cyr":"ек","lat":"ïek"}, {"cyr":"ел","lat":"ïew"},
        {"cyr":"ель","lat":"ïel"}, {"cyr":"ем","lat":"ïem"},
        {"cyr":"ен","lat":"ïen"}, {"cyr":"ень","lat":"ïeñ"},
        {"cyr":"еп","lat":"ïep"}, {"cyr":"ер","lat":"ïer"},
        {"cyr":"ес","lat":"ïes"}, {"cyr":"есь","lat":"ïesç"},
        {"cyr":"ет","lat":"ïet"}, {"cyr":"еть","lat":"ïetç"},
        {"cyr":"еф","lat":"ïef"}, {"cyr":"ех","lat":"ïeh"},
        {"cyr":"ецщ","lat":"ïetså"}, {"cyr":"ечщ","lat":"ïetþå"},
        {"cyr":"еш","lat":"ïesþ"},
    # Ё (yo)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ё","lat":"ïo"}, {"cyr":"ёб","lat":"ïob"},
        {"cyr":"ёв","lat":"ïov"}, {"cyr":"ёг","lat":"ïog"},
        {"cyr":"ёд","lat":"ïod"}, {"cyr":"ёдь","lat":"ïoð"},
        {"cyr":"ёж","lat":"ïozþ"}, {"cyr":"ёз","lat":"ïoz"},
        {"cyr":"ёзь","lat":"ïozç"}, {"cyr":"ёй","lat":"ïoï"},
        {"cyr":"ёк","lat":"ïok"}, {"cyr":"ёл","lat":"ïow"},
        {"cyr":"ёль","lat":"ïol"}, {"cyr":"ём","lat":"ïom"},
        {"cyr":"ён","lat":"ïon"}, {"cyr":"ёнь","lat":"ïoñ"},
        {"cyr":"ёп","lat":"ïop"}, {"cyr":"ёр","lat":"ïor"},
        {"cyr":"ёс","lat":"ïos"}, {"cyr":"ёсь","lat":"ïosç"},
        {"cyr":"ёт","lat":"ïot"}, {"cyr":"ёть","lat":"ïotç"},
        {"cyr":"ёф","lat":"ïof"}, {"cyr":"ёх","lat":"ïoh"},
        {"cyr":"ёцщ","lat":"ïotså"}, {"cyr":"ёчщ","lat":"ïotþå"},
        {"cyr":"ёш","lat":"ïosþ"},
    # Ж (zh, ż in Polish )
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"жа","lat":"zþa"}, {"cyr":"жи","lat":"zþi"},
        {"cyr":"жмщ","lat":"zþmå"}, {"cyr":"жнь","lat":"zþñå"},
        {"cyr":"жо","lat":"zþo"}, {"cyr":"жу","lat":"zþu"},
        {"cyr":"жы","lat":"zþy"}, {"cyr":"жэ","lat":"zþe"},
    # З (z)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"за","lat":"za"}, {"cyr":"збъ","lat":"zbå"},
        {"cyr":"звъ","lat":"zvå"}, {"cyr":"згъ","lat":"zgå"},
        {"cyr":"здъ","lat":"zdå"},{"cyr":"зи","lat":"zi"},
        {"cyr":"злъ","lat":"zwå"},{"cyr":"зъль","lat":"zlå"},
        {"cyr":"змъ","lat":"zmå"},{"cyr":"знъ","lat":"znå"},
        {"cyr":"зо","lat":"zo"},{"cyr":"зръ","lat":"zpå"},
        {"cyr":"зу","lat":"zu"},{"cyr":"зы","lat":"zy"},
        {"cyr":"зэ","lat":"ze"},
    # ЗЬ(ź in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"зе","lat":"zçe"}, {"cyr":"зё","lat":"zço"},
        {"cyr":"зьи","lat":"zçi"}, {"cyr":"зль","lat":"zçlå"},
        {"cyr":"знь","lat":"zçñå"}, {"cyr":"зрь","lat":"zçrå"},
        {"cyr":"зю","lat":"zçu"},{"cyr":"зя","lat":"zça"},
    # И (i)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"иб","lat":"ib"}, {"cyr":"ив","lat":"iv"},
        {"cyr":"иг","lat":"ig"}, {"cyr":"ид","lat":"id"},
        {"cyr":"идь","lat":"ið"}, {"cyr":"иж","lat":"izþ"},
        {"cyr":"из","lat":"iz"}, {"cyr":"изь","lat":"izç"},
        {"cyr":"ик","lat":"ik"}, {"cyr":"ил","lat":"iw"},
        {"cyr":"иль","lat":"il"}, {"cyr":"им","lat":"im"},
        {"cyr":"ин","lat":"in"}, {"cyr":"инь","lat":"iñ"},
        {"cyr":"ип","lat":"ip"}, {"cyr":"ир","lat":"ir"},
        {"cyr":"ис","lat":"is"}, {"cyr":"ись","lat":"isç"},
        {"cyr":"ит","lat":"it"}, {"cyr":"ить","lat":"itç"},
        {"cyr":"иф","lat":"if"}, {"cyr":"их","lat":"ih"},
        {"cyr":"ицщ","lat":"itså"}, {"cyr":"ичщ","lat":"itþå"},
        {"cyr":"иш","lat":"isþ"},
    # Й (y as in 'yesterday')
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        # No words begin with this character. 'ya', 'ye', 'yo', 'yu' have their
        # own symbols. 'yi' and 'yø' are not really pronouncable
    # К (k)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ка","lat":"ka"}, {"cyr":"квщ","lat":"kvå"},
        {"cyr":"ке","lat":"kïe"}, {"cyr":"кё","lat":"kïo"},
        {"cyr":"ки","lat":"ki"}, {"cyr":"клщ","lat":"quå"},
        {"cyr":"кль","lat":"klå"}, {"cyr":"ко","lat":"ko"},
        {"cyr":"крщ","lat":"krå"}, {"cyr":"ксщ","lat":"kså"},
        {"cyr":"ксь","lat":"ksçå"}, {"cyr":"ку","lat":"ku"},
        {"cyr":"кфщ","lat":"kfå"},{"cyr":"кшщ","lat":"ksþå"},
        {"cyr":"кы","lat":"ky"}, {"cyr":"кэ","lat":"ke"},
        {"cyr":"кю","lat":"kú"}, {"cyr":"кя","lat":"kïa"},
    # Л (w as in 'whiskey'; ł in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ла","lat":"wa"}, {"cyr":"ли","lat":"wi"},
        {"cyr":"ло","lat":"wo"}, {"cyr":"лу","lat":"wu"},
        {"cyr":"лы","lat":"wy"}, {"cyr":"лэ","lat":"we"},
    # ЛЬ(l)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ле","lat":"le"}, {"cyr":"лье","lat":"lïe"},
        {"cyr":"лё","lat":"lo"}, {"cyr":"льё","lat":"lïo"},
        {"cyr":"льи","lat":"li"}, {"cyr":"льы","lat":"ly"},
        {"cyr":"лю","lat":"lu"}, {"cyr":"лью","lat":"lú"},
        {"cyr":"ля","lat":"la"}, {"cyr":"лья","lat":"lïa"},
    # М (m)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ма","lat":"ma"}, {"cyr":"ме","lat":"mïe"},
        {"cyr":"мё","lat":"mïo"},{"cyr":"ми","lat":"mi"},
        {"cyr":"мль","lat":"mlå"}, {"cyr":"мо","lat":"mo"},
        {"cyr":"мрщ","lat":"mrå"}, {"cyr":"му","lat":"mu"},
        {"cyr":"мшщ","lat":"msþå"},{"cyr":"мы","lat":"my"},
        {"cyr":"мэ","lat":"me"},{"cyr":"мю","lat":"mú"},
        {"cyr":"мя","lat":"mïa"},
    # Н (n)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"на","lat":"na"}, {"cyr":"ни","lat":"ni"},
        {"cyr":"но","lat":"no"}, {"cyr":"ну","lat":"nu"},
        {"cyr":"ны","lat":"ny"}, {"cyr":"нэ","lat":"ne"},
    # НЬ(ny as in ca-ny-on; ń in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"не","lat":"ñe"}, {"cyr":"нё","lat":"ño"},
        {"cyr":"ню","lat":"ñu"}, {"cyr":"ня","lat":"ña"},
    # О (o)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"об","lat":"ob"}, {"cyr":"ов","lat":"ov"},
        {"cyr":"ог","lat":"og"}, {"cyr":"од","lat":"od"},
        {"cyr":"одь","lat":"oð"}, {"cyr":"ож","lat":"ozþ"},
        {"cyr":"оз","lat":"oz"}, {"cyr":"озь","lat":"ozç"},
        {"cyr":"ок","lat":"ok"}, {"cyr":"ол","lat":"ó"},
        {"cyr":"оль","lat":"ol"}, {"cyr":"ом","lat":"om"},
        {"cyr":"он","lat":"on"}, {"cyr":"онь","lat":"oñ"},
        {"cyr":"оп","lat":"op"}, {"cyr":"ор","lat":"or"},
        {"cyr":"ос","lat":"os"}, {"cyr":"ось","lat":"osç"},
        {"cyr":"от","lat":"ot"}, {"cyr":"оть","lat":"otç"},
        {"cyr":"оф","lat":"of"}, {"cyr":"ох","lat":"oh"},
        {"cyr":"оцщ","lat":"otså"}, {"cyr":"очщ","lat":"otþå"},
        {"cyr":"ош","lat":"osþ"},
    # П (p)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"па","lat":"pa"}, {"cyr":"пе","lat":"pïe"},
        {"cyr":"пё","lat":"pïo"}, {"cyr":"пи","lat":"pi"},
        {"cyr":"плщ","lat":"pwå"}, {"cyr":"пль","lat":"plå"},
        {"cyr":"по","lat":"po"}, {"cyr":"прщ","lat":"prå"},
        {"cyr":"псщ","lat":"pså"}, {"cyr":"псь","lat":"psç"},
        {"cyr":"пу","lat":"pu"}, {"cyr":"пхщ","lat":"phþå"},
        {"cyr":"пшщ","lat":"psþå"}, {"cyr":"пы","lat":"py"},
        {"cyr":"пэ","lat":"pe"}, {"cyr":"пю","lat":"pú"},
        {"cyr":"пя","lat":"pïa"},
    # Р (r)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ра","lat":"ra"}, {"cyr":"ри","lat":"ri"},
        {"cyr":"ро","lat":"ro"}, {"cyr":"ру","lat":"ru"},
        {"cyr":"ры","lat":"ry"}, {"cyr":"рэ","lat":"re"},
    # С (s)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"са","lat":"sa"}, {"cyr":"свъ","lat":"svå"},
        {"cyr":"си","lat":"si"}, {"cyr":"слъ","lat":"swå"},
        {"cyr":"съль","lat":"slå"}, {"cyr":"смъ","lat":"små"},
        {"cyr":"снъ","lat":"snå"}, {"cyr":"со","lat":"so"},
        {"cyr":"сръ","lat":"srå"}, {"cyr":"стъ","lat":"stå"},
        {"cyr":"су","lat":"su"}, {"cyr":"схъ","lat":"shþå"},
        {"cyr":"сы","lat":"sy"}, {"cyr":"сэ","lat":"se"},
    # СЬ(ś - polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"свь","lat":"sçvå"}, {"cyr":"се","lat":"sçe"},
        {"cyr":"сё","lat":"sço"}, {"cyr":"сьи","lat":"sçi"},
        {"cyr":"сль","lat":"sçlå"}, {"cyr":"снь","lat":"sçñ"},
        {"cyr":"срь","lat":"sçrå"}, {"cyr":"сть","lat":"stçå"},
        {"cyr":"сю","lat":"sçu"}, {"cyr":"ся","lat":"sça"},
    # Т (t)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"та","lat":"ta"}, {"cyr":"твъ","lat":"två"},
        {"cyr":"ти","lat":"ti"}, {"cyr":"тлъ","lat":"twå"},
        {"cyr":"тъль","lat":"tlå"}, {"cyr":"то","lat":"to"},
        {"cyr":"тръ","lat":"trå"}, {"cyr":"ту","lat":"tu"},
        {"cyr":"ты","lat":"ty"}, {"cyr":"тэ","lat":"te"},
        {"cyr":"тъю","lat":"tú"},
    # ТЬ(ć in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"те","lat":"tçe"}, {"cyr":"тё","lat":"tço"},
        {"cyr":"тьи","lat":"tçi"}, {"cyr":"тю","lat":"tçu"},
        {"cyr":"тя","lat":"tça"},
    # У (u)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"уб","lat":"ub"}, {"cyr":"ув","lat":"uv"},
        {"cyr":"уг","lat":"ug"}, {"cyr":"уд","lat":"ud"},
        {"cyr":"удь","lat":"uð"}, {"cyr":"уж","lat":"uzþ"},
        {"cyr":"уз","lat":"uz"}, {"cyr":"узь","lat":"uzç"},
        {"cyr":"ук","lat":"uk"}, {"cyr":"ул","lat":"uw"},
        {"cyr":"уль","lat":"ul"}, {"cyr":"ум","lat":"um"},
        {"cyr":"ун","lat":"un"}, {"cyr":"унь","lat":"uñ"},
        {"cyr":"уп","lat":"up"}, {"cyr":"ур","lat":"ur"},
        {"cyr":"ус","lat":"us"}, {"cyr":"усь","lat":"usç"},
        {"cyr":"ут","lat":"ut"}, {"cyr":"уть","lat":"utç"},
        {"cyr":"уф","lat":"uf"}, {"cyr":"ух","lat":"uh"},
        {"cyr":"уцщ","lat":"utså"}, {"cyr":"учщ","lat":"utþå"},
        {"cyr":"уш","lat":"usþ"},
    # Ф (f)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"фа","lat":"fa"}, {"cyr":"фе","lat":"fïe"},
        {"cyr":"фё","lat":"fïo"}, {"cyr":"фи","lat":"fi"},
        {"cyr":"фль","lat":"flå"}, {"cyr":"фо","lat":"fo"},
        {"cyr":"фрщ","lat":"frå"}, {"cyr":"фу","lat":"fu"},
        {"cyr":"фшщ","lat":"fsþå"},{"cyr":"фы","lat":"fy"},
        {"cyr":"фэ","lat":"fe"},{"cyr":"фю","lat":"fú"},
        {"cyr":"фя","lat":"fïa"},
    # Х (ch in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ха","lat":"ha"}, {"cyr":"хи","lat":"hi"},
        {"cyr":"хлщ","lat":"hwå"}, {"cyr":"хль","lat":"hlå"},
        {"cyr":"хмщ","lat":"hmå"}, {"cyr":"хо","lat":"ho"},
        {"cyr":"хрщ","lat":"hrå"}, {"cyr":"ху","lat":"hu"},
        {"cyr":"хфщ","lat":"hfå"}, {"cyr":"хшщ","lat":"hsþå"},
        {"cyr":"хы","lat":"hy"}, {"cyr":"хэ","lat":"he"},
    # Ц (c in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ца","lat":"tsa"}, {"cyr":"ци","lat":"tsi"},
        {"cyr":"цлщ","lat":"tswå"}, {"cyr":"цмщ","lat":"tsmå"},
        {"cyr":"цо","lat":"tso"}, {"cyr":"цу","lat":"tsu"},
        {"cyr":"цфщ","lat":"tsfå"}, {"cyr":"цы","lat":"tsy"},
        {"cyr":"цэ","lat":"tse"},
    # Ч (cz in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ча","lat":"tþa"}, {"cyr":"чи","lat":"tþi"},
        {"cyr":"члщ","lat":"tþwå"}, {"cyr":"чо","lat":"tþo"},
        {"cyr":"чу","lat":"tþu"}, {"cyr":"чфщ","lat":"tþfå"},
        {"cyr":"чы","lat":"tþy"}, {"cyr":"чэ","lat":"tþe"},
    # Ш (sz in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ша","lat":"sþa"}, {"cyr":"швщ","lat":"sþvå"},
        {"cyr":"ши","lat":"sþi"}, {"cyr":"шлщ","lat":"sþwå"},
        {"cyr":"шль","lat":"sþlå"}, {"cyr":"шмщ","lat":"sþmå"},
        {"cyr":"шнщ","lat":"sþnå"}, {"cyr":"шо","lat":"sþo"},
        {"cyr":"шпщ","lat":"sþpå"}, {"cyr":"шрщ","lat":"sþrå"},
        {"cyr":"штщ","lat":"sþtå"}, {"cyr":"шу","lat":"sþu"},
        {"cyr":"шхщ","lat":"shþå"}, {"cyr":"шы","lat":"sþy"},
        {"cyr":"шэ","lat":"sþe"},
    # Щ (x in Zulu)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"щьъа","lat":"xþa"}, {"cyr":"щьъу","lat":"xþu"},
        {"cyr":"щьъэ","lat":"xþe"},
    # Ъ (q in Zulu)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ъъа","lat":"qþa"}, {"cyr":"ъъу","lat":"qþu"},
        {"cyr":"ъъэ","lat":"qþe"},
    # Ы (y in Polih)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"ыб","lat":"øb"}, {"cyr":"ыв","lat":"øv"},
        {"cyr":"ыг","lat":"øg"}, {"cyr":"ыд","lat":"ød"},
        {"cyr":"ыдь","lat":"øð"}, {"cyr":"ыж","lat":"øzþ"},
        {"cyr":"ыз","lat":"øz"}, {"cyr":"ызь","lat":"øzç"},
        {"cyr":"ык","lat":"øk"}, {"cyr":"ыл","lat":"yw"},
        {"cyr":"ыль","lat":"øl"}, {"cyr":"ым","lat":"øm"},
        {"cyr":"ын","lat":"øn"}, {"cyr":"ынь","lat":"yñ"},
        {"cyr":"ып","lat":"øp"}, {"cyr":"ыр","lat":"ør"},
        {"cyr":"ыс","lat":"ys"}, {"cyr":"ысь","lat":"øsç"},
        {"cyr":"ыт","lat":"øt"}, {"cyr":"ыть","lat":"øtç"},
        {"cyr":"ыф","lat":"yf"}, {"cyr":"ых","lat":"øh"},
        {"cyr":"ыцщ","lat":"øtså"}, {"cyr":"ычщ","lat":"øtþå"},
        {"cyr":"ыш","lat":"øsþ"},
    # Ь     (Clicks from Zulu)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
            # See 'Щ' If it is an initial letter, than 'Ь' is permissable
    # Э (e)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"эб","lat":"eb"}, {"cyr":"эв","lat":"ev"},
        {"cyr":"эг","lat":"eg"}, {"cyr":"эд","lat":"ed"},
        {"cyr":"эдь","lat":"eð"}, {"cyr":"эж","lat":"ezþ"},
        {"cyr":"эз","lat":"ez"}, {"cyr":"эзь","lat":"ezç"},
        {"cyr":"эк","lat":"ek"}, {"cyr":"эл","lat":"ew"},
        {"cyr":"эль","lat":"el"}, {"cyr":"эм","lat":"em"},
        {"cyr":"эн","lat":"en"}, {"cyr":"энь","lat":"eñ"},
        {"cyr":"эп","lat":"ep"}, {"cyr":"эр","lat":"er"},
        {"cyr":"эс","lat":"es"}, {"cyr":"эсь","lat":"esç"},
        {"cyr":"эт","lat":"et"}, {"cyr":"эть","lat":"etç"},
        {"cyr":"эф","lat":"ef"}, {"cyr":"эх","lat":"eh"},
        {"cyr":"эцщ","lat":"etså"}, {"cyr":"эчщ","lat":"etþå"},
        {"cyr":"эш","lat":"esþ"},
    # Ю (ju in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"юб","lat":"úb"}, {"cyr":"юв","lat":"úv"},
        {"cyr":"юг","lat":"úg"}, {"cyr":"юд","lat":"úd"},
        {"cyr":"юдь","lat":"úð"}, {"cyr":"юж","lat":"úzþ"},
        {"cyr":"юз","lat":"úz"}, {"cyr":"юзь","lat":"úzç"},
        {"cyr":"юк","lat":"úk"}, {"cyr":"юль","lat":"úl"},
        {"cyr":"юм","lat":"úm"}, {"cyr":"юн","lat":"ún"},
        {"cyr":"юп","lat":"úp"}, {"cyr":"юр","lat":"úr"},
        {"cyr":"юс","lat":"ús"}, {"cyr":"юсь","lat":"úsç"},
        {"cyr":"ют","lat":"út"}, {"cyr":"ють","lat":"útç"},
        {"cyr":"юф","lat":"úf"}, {"cyr":"юх","lat":"úh"},
        {"cyr":"юцщ","lat":"útså"}, {"cyr":"ючщ","lat":"útþå"},
        {"cyr":"юш","lat":"úsþ"},
    # Я (ja in Polish)
            # А, Б, В, Г, Д, Е, Ё, Ж, З, И, Й, К, Л, М, Н, О,
            # П, Р, С, Т, У, Ф, Х, Ц, Ч, Ш, Щ, Ъ, Ы, Ь, Э, Ю, Я
        {"cyr":"яб","lat":"ïab"}, {"cyr":"яв","lat":"ïav"},
        {"cyr":"яг","lat":"ïag"}, {"cyr":"яд","lat":"ïad"},
        {"cyr":"ядь","lat":"ïað"}, {"cyr":"яж","lat":"ïazþ"},
        {"cyr":"яз","lat":"ïaz"}, {"cyr":"язь","lat":"ïazç"},
        {"cyr":"як","lat":"ïak"}, {"cyr":"яль","lat":"ïal"},
        {"cyr":"ям","lat":"ïam"}, {"cyr":"ян","lat":"ïan"},
        {"cyr":"янь","lat":"ïañ"},{"cyr":"яп","lat":"ïap"},
        {"cyr":"яр","lat":"ïar"}, {"cyr":"яс","lat":"ïas"},
        {"cyr":"ясь","lat":"ïasç"},{"cyr":"ят","lat":"ïat"},
        {"cyr":"ять","lat":"ïatç"},{"cyr":"яф","lat":"ïaf"},
        {"cyr":"ях","lat":"ïah"},{"cyr":"яцщ","lat":"ïatså"},
        {"cyr":"ячщ","lat":"ïatþå"},{"cyr":"яш","lat":"ïasþ"}
    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cRnd_syl = db.rnd_syl(ccTemb)                          # Syllable collection

    # DELETE THE PREVIOUS ENTRY
    dQuery = cRnd_syl.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    iCnt = 0
    for x in aSyllable:
        dSyl = {"idx":iCnt, "cyr":x["cyr"], "lat":x["lat"]}
        iCnt += 1
        cRnd_syl.insert_one(dSyl)
    print("Syllables for random names ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_male_names():
    """ Sets up the male names. These are not only used to name people (or
    buildings / parks after people), but also used as a base for surnames.
    In Ruby, they were hard-coded; they are too in this method. However, the
     method pushes them into the database.
    """

    aMale = [
#       {"lat":"", "cyr":"", "aAlt":[]},
    # A
        {"lat":"Aaron",    "cyr":"Аъщрэн",     "aAlt":["Æærn"]},
        {"lat":"Abraham",  "cyr":"Абрахам",    "aAlt":[]},
        {"lat":"Adam",     "cyr":"Адам",       "aAlt":[]},
        {"lat":"Adrian",   "cyr":"Адръян",     "aAlt":["Adrÿan"]},
        {"lat":"Albert",   "cyr":"Альбэрт",    "aAlt":[]},
        {"lat":"Alexander","cyr":"Александэр", "aAlt":["Aleksander"]},
        {"lat":"Allan",    "cyr":"Щэллен",     "aAlt":["Ællen"]},
        {"lat":"Andrew",   "cyr":"Анджэй",     "aAlt":["Ændru"]},
        {"lat":"Anton",    "cyr":"Антон",      "aAlt":[]},
        {"lat":"Arkadian", "cyr":"Аркадъюш",   "aAlt":["Arkádïen", "Arkadúsþ"]},
        {"lat":"Arnold",   "cyr":"Арнольд",    "aAlt":[]},
        {"lat":"Arthur",   "cyr":"Артур",      "aAlt":["Ôða", "Artur"]},

    # B
        {"lat":"Barney",    "cyr":"Барни",      "aAlt":["Bâni"]},
        {"lat":"Barry",     "cyr":"Баъри",      "aAlt":["Bærri"]},
        {"lat":"Benjamin",  "cyr":"Бэнъямин",   "aAlt":["Bendþamin"]},
        {"lat":"Bernard",   "cyr":"Бэрнард",    "aAlt":["Boênad"]},
        {"lat":"åBjörn",    "cyr":"Бёщн",       "aAlt":["Bïôn"]},
        {"lat":"Bogosław",  "cyr":"Богослав",   "aAlt":["Bogoswav"]},
        {"lat":"Bogdan",    "cyr":"Богдан",     "aAlt":[]},
        {"lat":"Boris",     "cyr":"Борис",      "aAlt":[]},
        {"lat":"Brandon",   "cyr":"Брэндэн",    "aAlt":["Brænden"]},
        {"lat":"Bruce",     "cyr":"Брусс",      "aAlt":["Bruß"]},

    # C
        {"lat":"Cyril",     "cyr":"Цырыль",     "aAlt":["Syryl"]},
        {"lat":"Craig",     "cyr":"Крэйг",      "aAlt":["Krág"]},
        {"lat":"Charles",   "cyr":"Чащльс",     "aAlt":["Tþarls"]},
        {"lat":"Cyrus",     "cyr":"Цырус",      "aAlt":["Síres"]},
        {"lat":"Chester",   "cyr":"Чеслав",     "aAlt":["Tþeswav"]},
        {"lat":"Christopher","cyr":"Кшыштоф",   "aAlt":["Krystofer"]},

    # D
        {"lat":"Daniel",    "cyr":"Данель",     "aAlt":["Dæñel"]},
        {"lat":"Darius",    "cyr":"Дарюш",      "aAlt":["Darús"]},
        {"lat":"David",     "cyr":"Давид",      "aAlt":["Dávid"]},
        {"lat":"Derrick",   "cyr":"Дэрик",      "aAlt":["Derik"]},
        {"lat":"Dominik",   "cyr":"Доминик",    "aAlt":[]},
        {"lat":"Donald",    "cyr":"Дональд",    "aAlt":[]},

    # E
        {"lat":"Edward",    "cyr":"Эдвард",     "aAlt":["Edwoêd"]},
        {"lat":"Erik",      "cyr":"Эрик",       "aAlt":[]},
        {"lat":"Ernest",    "cyr":"Ыърнэст",    "aAlt":["Øþnest"]},
        {"lat":"Ethan",     "cyr":"Иден",       "aAlt":["Iðen"]},
        {"lat":"Eugene",    "cyr":"Юджищн",     "aAlt":["Údþîn"]},

    # F
        {"lat":"Fabian",    "cyr":"Фабян",      "aAlt":["Fabïan"]},
        {"lat":"Felix",     "cyr":"Фэльикс",    "aAlt":["Filiks"]},
        {"lat":"Frank",     "cyr":"Франк",      "aAlt":[]},

    # G
        {"lat":"Gabriel",   "cyr":"Габриель",   "aAlt":["Gábrÿel"]},
        {"lat":"Gary",      "cyr":"Гэри",       "aAlt":["Gæri"]},
        {"lat":"George",    "cyr":"Ежы",        "aAlt":["Dzþôdzþ"]},
        {"lat":"Graham",    "cyr":"Грахам",     "aAlt":["Gráåem"]},
        {"lat":"Gustav",    "cyr":"Густав",     "aAlt":[]},

    # H
        {"lat":"Hans",      "cyr":"Ханс",       "aAlt":[]},
        {"lat":"Henri",     "cyr":"Хэнри",      "aAlt":["Àrþi"]},
        {"lat":"Harold",    "cyr":"Харольд",    "aAlt":[]},
        {"lat":"Helmut",    "cyr":"Хэльмут",    "aAlt":[]},
        {"lat":"Herman",    "cyr":"Хэрман",     "aAlt":[]},
        {"lat":"Hubert",    "cyr":"Хюбэрт",     "aAlt":["Húbert"]},

    # I
        {"lat":"Igor",      "cyr":"Игор",       "aAlt":[]},
        {"lat":"Ivan",      "cyr":"Иван",       "aAlt":[]},
        {"lat":"Isaac",     "cyr":"Изак",       "aAlt":[]},
        {"lat":"Ivor",      "cyr":"Ивор",       "aAlt":[]},
        {"lat":"Ïaroswav",  "cyr":"Ярослав",    "aAlt":[]},
        {"lat":"Ïèdzþeï",   "cyr":"Еьджэй",     "aAlt":[]},
        {"lat":"Ïurek",     "cyr":"Юрэк",       "aAlt":[]},

    # J
        {"lat":"Jack",      "cyr":"Яцэк",       "aAlt":["Ïatsek"]},
        {"lat":"James",     "cyr":"Джэймс",     "aAlt":["Dzþáms"]},
        {"lat":"Jacob",     "cyr":"Якуб",       "aAlt":["Ïakub"]},
        {"lat":"Jan",       "cyr":"Ян",         "aAlt":["Ïan"]},
        {"lat":"Jason",     "cyr":"Джэйсон",    "aAlt":["Dzþáson"]},
        {"lat":"Jeffery",   "cyr":"Джэффри",    "aAlt":["Dzþeffri"]},
        {"lat":"Joel",      "cyr":"Жоль",       "aAlt":["Zþol"]},
        {"lat":"Johan",     "cyr":"Ёхан",       "aAlt":["Ïohan"]},
        {"lat":"Justin",    "cyr":"Джастин",    "aAlt":["Dzþastin"]},
        {"lat":"Jürgen",    "cyr":"Юъргэн",     "aAlt":["Ïürgen"]},
        {"lat":"Joseph",    "cyr":"Юзэф",       "aAlt":["Úzef"]},

    # K
        {"lat":"Ken",       "cyr":"Кэн",        "aAlt":[]},
        {"lat":"Kevin",     "cyr":"Кэвин",      "aAlt":[]},

    # L
        {"lat":"Lars",      "cyr":"Лярс",       "aAlt":[]},
        {"lat":"Lawrence",  "cyr":"Лёрэнц",     "aAlt":["Lôrents"]},
        {"lat":"Leonard",   "cyr":"Леонард",    "aAlt":["Lenerd"]},
        {"lat":"Lehþ",      "cyr":"Лех",        "aAlt":[]},
        {"lat":"Llwellyn",  "cyr":"Льлэльын",   "aAlt":[]},
        {"lat":"Louis",     "cyr":"Люлыс",      "aAlt":["Luwi"]},
        {"lat":"Lukas",     "cyr":"Лукаш",      "aAlt":[]},
        {"lat":"Ludwig",    "cyr":"Людвиг",     "aAlt":[]},
        {"lat":"Lubomir",   "cyr":"Любомир",    "aAlt":[]},
        {"lat":"Luboswav",  "cyr":"Любослав",   "aAlt":[]},

    # M
        {"lat":"Marius",    "cyr":"Марюш",      "aAlt":[]},
        {"lat":"Markus",    "cyr":"Марэк",      "aAlt":[]},
        {"lat":"Matthew",   "cyr":"Матэуш",     "aAlt":["Mæðú"]},
        {"lat":"Maurcice",  "cyr":"Малърис",    "aAlt":["Môriß"]},
        {"lat":"Maximilian","cyr":"Максимильян","aAlt":[]},
        {"lat":"Michael",   "cyr":"Михал",      "aAlt":["Míkel"]},
        {"lat":"Miroswav",  "cyr":"Мирослав",   "aAlt":[]},
        {"lat":"Marïan",    "cyr":"Марян",      "aAlt":[]},

    # N
        {"lat":"Nicholas",  "cyr":"Миколай",    "aAlt":["Nikolas"]},
        {"lat":"Nathan",    "cyr":"Натщхан",    "aAlt":["Náðen"]},
        {"lat":"Nelson",    "cyr":"Нэльсон",    "aAlt":[]},
        {"lat":"Nigel",     "cyr":"Иьигель",    "aAlt":["Nídzþel"]},
        {"lat":"åNoël",     "cyr":"Нощэль",     "aAlt":["Nol"]},
        {"lat":"Norbert",   "cyr":"Норбэрт",    "aAlt":[]},
        {"lat":"Norman",    "cyr":"Норман",     "aAlt":[]},

    # O
        {"lat":"Olaf",      "cyr":"Оляф",       "aAlt":[]},
        {"lat":"Oscar",     "cyr":"Оскар",      "aAlt":[]},
        {"lat":"Oliver",    "cyr":"Ольивэр",    "aAlt":[]},
        {"lat":"Olek",      "cyr":"Олек",       "aAlt":[]},
        {"lat":"Otto",      "cyr":"Отто",       "aAlt":[]},

    # P
        {"lat":"Patrik",    "cyr":"Патрик",     "aAlt":[]},
        {"lat":"Paul",      "cyr":"Павэл",      "aAlt":[]},
        {"lat":"Peter",     "cyr":"Пётр",       "aAlt":["Pïotr"]},
        {"lat":"Phillip",   "cyr":"Фильип",     "aAlt":[]},

    # Q
        {"lat":"Quinton",   "cyr":"Пеьтяк",     "aAlt":[]},
        {"lat":"Quincy",    "cyr":"Клынци",     "aAlt":[]},

    # R
        {"lat":"Rafael",    "cyr":"Рафал",      "aAlt":[]},
        {"lat":"Ralf",      "cyr":"Ральф",      "aAlt":[]},
        {"lat":"Raymond",   "cyr":"Раймунд",    "aAlt":["Rámund"]},
        {"lat":"Richard",   "cyr":"Рышард",     "aAlt":["Ritþard"]},
        {"lat":"Robert",    "cyr":"Робэрт",     "aAlt":[]},
        {"lat":"Rudolf",    "cyr":"Рудольф",    "aAlt":[]},
        {"lat":"Ronald",    "cyr":"Рональд",    "aAlt":[]},
        {"lat":"Rupert",    "cyr":"Рупэрт",     "aAlt":[]},

    # S
        {"lat":"Søren",     "cyr":"Сыърэн",     "aAlt":[]},
        {"lat":"Samuel",    "cyr":"Сэмюль",     "aAlt":[]},
        {"lat":"Scott",     "cyr":"Скот",       "aAlt":[]},
        {"lat":"Sebastian", "cyr":"Сэастъян",   "aAlt":[]},
        {"lat":"Sigmund",   "cyr":"Сигмунд",    "aAlt":[]},
        {"lat":"Steven",    "cyr":"Шчэпан",     "aAlt":[]},
        {"lat":"Sven",      "cyr":"Свэн",       "aAlt":[]},
        {"lat":"Stefan",    "cyr":"Стэфан",     "aAlt":[]},
        {"lat":"Sylvester", "cyr":"Сыльвэстэр", "aAlt":[]},
        {"lat":"Simon",     "cyr":"Шымон",      "aAlt":[]},
        {"lat":"Slavomir",  "cyr":"Славомир",   "aAlt":[]},
        {"lat":"Stanley",   "cyr":"Станислав",  "aAlt":[]},

    # T
        {"lat":"Theodore",  "cyr":"Тадэуш",     "aAlt":["Ðîodô"]},
        {"lat":"Tomas",     "cyr":"Томаш",      "aAlt":[]},
        {"lat":"Tobias",    "cyr":"Тобияс",     "aAlt":[]},
        {"lat":"Titus",     "cyr":"Тытус",      "aAlt":[]},

    # U
        {"lat":"Ulrih",     "cyr":"Ульрих",     "aAlt":[]},
        {"lat":"Urban",     "cyr":"Урбан",      "aAlt":[]},
        {"lat":"Ursus",     "cyr":"Урсус",      "aAlt":[]},

    # V
        {"lat":"Victor",    "cyr":"Виктор",     "aAlt":[]},
        {"lat":"Vitold",    "cyr":"Витольд",    "aAlt":[]},
        {"lat":"Vincent",   "cyr":"Винцэнт",    "aAlt":[]},
        {"lat":"Vladimir",  "cyr":"Владимир",   "aAlt":[]},
        {"lat":"Vladoslav", "cyr":"Владослав",  "aAlt":[]},

    # W
        {"lat":"Walter",    "cyr":"Вальтэр",    "aAlt":[]},
        {"lat":"Warren",    "cyr":"Лоррэн",     "aAlt":[]},
        {"lat":"William",   "cyr":"Болеслав",   "aAlt":["Wylïam"]},
        {"lat":"Wojtek",    "cyr":"Войтэк",     "aAlt":[]},
        {"lat":"Wieslaw",   "cyr":"Веслав",     "aAlt":[]},

    # X
        {"lat":"Xavir",     "cyr":"Ксавир",     "aAlt":[]},
        {"lat":"Xylonder",  "cyr":"Ксылёндэр",  "aAlt":[]},

    # Y

    # Z
        {"lat":"Zacharia",  "cyr":"Захария",    "aAlt":[]},
        {"lat":"Zdzçislav", "cyr":"Здзьислав",  "aAlt":[]},
        {"lat":"åZoël",     "cyr":"Зощэль",     "aAlt":[]},
        {"lat":"Zygmund",   "cyr":"Зыгмунд",    "aAlt":[]},

#        {"lat":"", "cyr":"", "aAlt":[]},
#        {"lat":"", "cyr":"", "aAlt":[]},
#        {"lat":"", "cyr":"", "aAlt":[]},


    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cRnd_man = db.rnd_man(ccTemb)                          # Syllable collection

    # DELETE PREVIOUS ITEMS
    dQuery = cRnd_man.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    iCnt = 0
    for x in aMale:
        dMan = {"idx":iCnt, "cyr":x["cyr"], "lat":x["lat"], "aAlt":x["aAlt"]}
        iCnt += 1
        cRnd_man.insert_one(dMan)
    print("Male names ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_female_names():
    """ Sets up the female names. These are not only used to name people but
    also buildings / parks after people. In Ruby, they were hard-coded; they are
    too in this method. However, the method pushes them into the database.
    """

    aFemale = [
#       {"lat":"", "cyr":"", "aAlt":[]},
    # A
        {"lat":"Abigail",   "cyr":"Эбигэйль",   "aAlt":["Æbigál"]},
        {"lat":"Adell",     "cyr":"Аъдэлль",    "aAlt":[]},
        {"lat":"Ægnes",     "cyr":"Агнешка",    "aAlt":["Agnes"]},
        {"lat":"Allison",   "cyr":"Альисон",    "aAlt":[]},
        {"lat":"Amanda",    "cyr":"Аманда",     "aAlt":[]},
        {"lat":"Anna",      "cyr":"Анна",       "aAlt":[]},
        {"lat":"åAngelique","cyr":"Аънджэльищк","aAlt":["Ændzþelîk"]},
        {"lat":"Ashley",    "cyr":"Эшльищ",     "aAlt":["Æsþlî"]},
        {"lat":"Angela",    "cyr":"Аъиджэля",   "aAlt":[]},
        {"lat":"Alexandra", "cyr":"Александра", "aAlt":[]},
        {"lat":"Agatha",    "cyr":"Агата",      "aAlt":["Agaða"]},

    # B
        {"lat":"Barbara",   "cyr":"Барбара",    "aAlt":[]},
        {"lat":"Belinda",   "cyr":"Бэльинда",   "aAlt":[]},
        {"lat":"Bernadet",  "cyr":"Быщнадэт",   "aAlt":[]},
        {"lat":"Betrix",    "cyr":"Бэтрикс",    "aAlt":[]},
        {"lat":"Betti",     "cyr":"Бэата",      "aAlt":[]},
        {"lat":"Bianca",    "cyr":"Бянка",      "aAlt":[]},
        {"lat":"Brigit",    "cyr":"Брыджыта",   "aAlt":[]},
        {"lat":"Britney",   "cyr":"Бритоня",    "aAlt":[]},

    # C
        {"lat":"Candice",   "cyr":"Кэндис",     "aAlt":["Kændis"]},
        {"lat":"Caroline",  "cyr":"Карольина",  "aAlt":["Kærolín"]},
        {"lat":"Cecilia",   "cyr":"Сэсилья",    "aAlt":["Sesilïa"]},
        {"lat":"Celeste",   "cyr":"Сэлест",     "aAlt":["Selest"]},
        {"lat":"Chloë",     "cyr":"Чэслава",    "aAlt":["Klowi"]},
        {"lat":"Christene", "cyr":"Крыстына",   "aAlt":["Kristîn"]},
        {"lat":"Cindy",     "cyr":"Цынди",      "aAlt":["Syndi"]},
        {"lat":"Claire",    "cyr":"Кляра",      "aAlt":["Klê"]},
        {"lat":"Claudia",   "cyr":"Клялъдя",    "aAlt":["Klawdïa"]},
        {"lat":"Charlotte", "cyr":"Шарлет",     "aAlt":["Sþâlet"]},

    # D
        {"lat":"Danielle",  "cyr":"Данелля",    "aAlt":[]},
        {"lat":"Donna",     "cyr":"Данута",     "aAlt":[]},
        {"lat":"Debra",     "cyr":"Дэбра",      "aAlt":[]},
        {"lat":"Denise",    "cyr":"Дэнищс",     "aAlt":[]},
        {"lat":"Diana",     "cyr":"Дъияна",     "aAlt":[]},
        {"lat":"Dominique", "cyr":"Доминика",   "aAlt":["Domink"]},
        {"lat":"Dorthy",    "cyr":"Дорота",     "aAlt":["Dorði"]},

    # E
        {"lat":"Edith",     "cyr":"Эдыдь",      "aAlt":["Edið"]},
        {"lat":"Emillia",   "cyr":"Эмилья",     "aAlt":["Emillïa"]},
        {"lat":"Emma",      "cyr":"Эмма",       "aAlt":[]},
        {"lat":"Erika",     "cyr":"Эрика",      "aAlt":[]},
        {"lat":"Ester",     "cyr":"Эстэр",      "aAlt":[]},
        {"lat":"Eva",       "cyr":"Эва",        "aAlt":[]},
        {"lat":"Elanor",    "cyr":"Элянор",     "aAlt":[]},
        {"lat":"Eugenia",   "cyr":"Юджиня",     "aAlt":["Údzþiña"]},


    # F
        {"lat":"Fabïa",     "cyr":"Фабя",       "aAlt":[]},
        {"lat":"Felicity",  "cyr":"Фэльисити",  "aAlt":[]},
        {"lat":"Fÿóna",     "cyr":"Фиёна",      "aAlt":["Fiona"]},
        {"lat":"Florence",  "cyr":"Флёрэиц",    "aAlt":[]},
        {"lat":"Fransis",   "cyr":"Франтьишка", "aAlt":[]},

    # G
        {"lat":"Gabriella", "cyr":"Габриелля",  "aAlt":[]},
        {"lat":"Georgina",  "cyr":"Ежэнка",     "aAlt":[]},
        {"lat":"Gladis",    "cyr":"Глядис",     "aAlt":[]},
        {"lat":"Grace",     "cyr":"Гражына",    "aAlt":[]},
        {"lat":"Genevieve", "cyr":"Жыъныъвищв", "aAlt":["Zþønøvîv"]},

    # H
        {"lat":"Hanna",     "cyr":"Ханна",      "aAlt":[]},
        {"lat":"Hazel",     "cyr":"Хазэль",     "aAlt":["Házel"]},
        {"lat":"Hæða",      "cyr":"Хаъдя",      "aAlt":["Heather"]},
        {"lat":"Hídi",      "cyr":"Хайди",      "aAlt":["Heidi"]},
        {"lat":"Hellen",    "cyr":"Хэлена",     "aAlt":[]},
        {"lat":"Henrietta", "cyr":"Хэнрята",    "aAlt":[]},

    # I
        {"lat":"Ida",       "cyr":"Ида",        "aAlt":[]},
        {"lat":"Iga",       "cyr":"Ига",        "aAlt":[]},
        {"lat":"Ilana",     "cyr":"Иляна",      "aAlt":[]},
        {"lat":"Irene",     "cyr":"Ирэна",      "aAlt":["Írîn"]},
        {"lat":"Isabella",  "cyr":"Изабэля",    "aAlt":["Izabel"]},
        {"lat":"Ivona",     "cyr":"Ивона",      "aAlt":[]},
        {"lat":"Ïadwiga",   "cyr":"Ядвига",     "aAlt":[]},

    # J
        {"lat":"Jacquie",   "cyr":"Жакльина",   "aAlt":[]},
        {"lat":"Jennifer",  "cyr":"Енифэря",    "aAlt":[]},
        {"lat":"Jessica",   "cyr":"Джэсика",    "aAlt":[]},
        {"lat":"Jill",      "cyr":"Джиль",      "aAlt":[]},
        {"lat":"Joanne",    "cyr":"Аська",      "aAlt":[]},
        {"lat":"Josephine", "cyr":"Юзэфина",   "aAlt":[]},
        {"lat":"Joice",     "cyr":"Джойс",      "aAlt":[]},
        {"lat":"Juliet",    "cyr":"Юльяна",     "aAlt":[]},
        {"lat":"Judith",    "cyr":"Юдыта",      "aAlt":[]},


    # K
        {"lat":"Karen",     "cyr":"Карэн",      "aAlt":[]},
        {"lat":"Kathryn",   "cyr":"Катажына",   "aAlt":["Kæðrøn"]},
        {"lat":"Kim",       "cyr":"Ким",        "aAlt":[]},
        {"lat":"Kørsten",   "cyr":"Кырстына",   "aAlt":[]},
        {"lat":"Kathleen",  "cyr":"Каталена",   "aAlt":[]},
        {"lat":"Kasandra",  "cyr":"Касандра",   "aAlt":[]},

    # L
        {"lat":"Lauren",    "cyr":"Лёрен",      "aAlt":["Lôren"]},
        {"lat":"Lee-Ann",   "cyr":"Лищ-Энн",    "aAlt":["Lî-Ænn"]},
        {"lat":"Linda",     "cyr":"Льинда",     "aAlt":[]},
        {"lat":"Lucinda",   "cyr":"Люцында",    "aAlt":[]},
        {"lat":"Lisa",      "cyr":"Льиса",      "aAlt":[]},
        {"lat":"Louse",     "cyr":"Людвига",    "aAlt":["Luwîz"]},
        {"lat":"Leona",     "cyr":"Леона",      "aAlt":[]},
        {"lat":"Loraine",   "cyr":"Лёрэйн",     "aAlt":["Lorán"]},

    # M
        {"lat":"Madelain",  "cyr":"Мэдэльын",   "aAlt":[]},
        {"lat":"Mallory",   "cyr":"Мэлёри",     "aAlt":[]},
        {"lat":"Margret",   "cyr":"Малгожата",  "aAlt":[]},
        {"lat":"Magdalena", "cyr":"Магдалена",  "aAlt":[]},
        {"lat":"Marieke",   "cyr":"Марики",     "aAlt":[]},
        {"lat":"Marlyn",    "cyr":"Марыся",     "aAlt":[]},
        {"lat":"Marina",    "cyr":"Марина",     "aAlt":[]},
        {"lat":"Martha",    "cyr":"Марта",      "aAlt":["Marða"]},
        {"lat":"Marÿa",     "cyr":"Марыя",      "aAlt":["åMaria"]},
        {"lat":"Matilda",   "cyr":"Матыльда",   "aAlt":[]},
        {"lat":"Megan",     "cyr":"Мэгэн",      "aAlt":[]},
        {"lat":"Melinda",   "cyr":"Мэльинда",   "aAlt":[]},
        {"lat":"Michelle",  "cyr":"Михальина",  "aAlt":[]},
        {"lat":"Mirrïam",   "cyr":"Мирка",      "aAlt":[]},
        {"lat":"Molly",     "cyr":"Молльи",     "aAlt":[]},
        {"lat":"Monique",   "cyr":"Моника",     "aAlt":[]},
        {"lat":"Martina",   "cyr":"Мартина",    "aAlt":[]},
        {"lat":"Maureen",   "cyr":"Мощрищн",    "aAlt":[]},
        {"lat":"Melissa",   "cyr":"Мэльисса",   "aAlt":[]},

    # N
        {"lat":"Natasha",   "cyr":"Наташа",     "aAlt":["Natasþa"]},
        {"lat":"Natalia",   "cyr":"Наталья",    "aAlt":["Natalïa"]},
        {"lat":"Nadia",     "cyr":"Надъя",      "aAlt":["Nadïa"]},
        {"lat":"Nicole",    "cyr":"Николя",     "aAlt":["Nikôl"]},
        {"lat":"Nina",      "cyr":"Нина",       "aAlt":[]},

    # O
        {"lat":"Olga",      "cyr":"Ольга",      "aAlt":[]},
        {"lat":"Olivia",    "cyr":"Ольивя",     "aAlt":[]},
        {"lat":"Octavia",   "cyr":"Октавя",     "aAlt":[]},

    # P
        {"lat":"Pamela",    "cyr":"Памэля",     "aAlt":[]},
        {"lat":"Patricia",  "cyr":"Патрыця",    "aAlt":[]},
        {"lat":"Phoebie",   "cyr":"Фищбищ",     "aAlt":[]},
        {"lat":"Paulina",   "cyr":"Палъльина",  "aAlt":[]},
        {"lat":"Priscilla", "cyr":"Присиля",    "aAlt":[]},

    # Q
        {"lat":"Queenie",   "cyr":"Крулевня",    "aAlt":[]},
        {"lat":"Quintina",  "cyr":"Пеьтёна",     "aAlt":[]},

    # R
        {"lat":"Rachel",    "cyr":"Рахэль",     "aAlt":[]},
        {"lat":"Rebecca",   "cyr":"Рэбэка",     "aAlt":["Rebeka"]},
        {"lat":"Regina",    "cyr":"Рэгина",     "aAlt":[]},
        {"lat":"Rose",      "cyr":"Ружа",       "aAlt":[]},
        {"lat":"Ruth",      "cyr":"Рута",       "aAlt":[]},
        {"lat":"Roxanne",   "cyr":"Роксанна",   "aAlt":[]},
        {"lat":"Renata",    "cyr":"Рэната",     "aAlt":[]},

    # S
        {"lat":"Sally",     "cyr":"Сэлльи",     "aAlt":[]},
        {"lat":"Sandra",    "cyr":"Сандра",     "aAlt":[]},
        {"lat":"Sharon",    "cyr":"Шаърэн",     "aAlt":["Sþæren"]},
        {"lat":"Sheryl",    "cyr":"Шэрыль",     "aAlt":["Sþeryl"]},
        {"lat":"Simone",    "cyr":"Симолн",     "aAlt":["Simón"]},
        {"lat":"Steffi",    "cyr":"Стэффи",     "aAlt":[]},
        {"lat":"Stephanie", "cyr":"Стэфэни",    "aAlt":["Stefeni"]},
        {"lat":"Suzan",     "cyr":"Сузан",      "aAlt":[]},
        {"lat":"Stanislava","cyr":"Станисава",  "aAlt":[]},
        {"lat":"Sarah",     "cyr":"Сэращ",      "aAlt":["Særâ"]},
        {"lat":"Sylvia",    "cyr":"Сыльвя",     "aAlt":[]},
        {"lat":"Samantha",  "cyr":"Сэмэндя",    "aAlt":["Samanða"]},
        {"lat":"Sabrina",   "cyr":"Сабрина",    "aAlt":[]},

    # T
        {"lat":"Tabitha",   "cyr":"Табидя",     "aAlt":["Tabiða"]},
        {"lat":"Tanya",     "cyr":"Таня",       "aAlt":["Taña"]},
        {"lat":"Téa",       "cyr":"Тэща",       "aAlt":["Teåa"]},
        {"lat":"Thelma",    "cyr":"Дельма",     "aAlt":["Ðelma"]},
        {"lat":"Teresa",    "cyr":"Тэрэса",     "aAlt":[]},
        {"lat":"Tatïana",   "cyr":"Татъяна",    "aAlt":[]},

    # U
        {"lat":"Ursula",    "cyr":"Уршуля",     "aAlt":["Øþsþula"]},
        {"lat":"Ulritsa",   "cyr":"Ульрица",    "aAlt":[]},

    # V
        {"lat":"Vænessa",   "cyr":"Вэнэсса",    "aAlt":["Vanessa"]},
        {"lat":"Victoria",  "cyr":"Викторя",    "aAlt":["Viktorïa"]},
        {"lat":"Violet",    "cyr":"Вёлетта",    "aAlt":["Vílet"]},
        {"lat":"Veronica",  "cyr":"Вэроника",   "aAlt":[]},

    # W
        {"lat":"Wanda",     "cyr":"Ванда",      "aAlt":["Wonda"]},
        {"lat":"Wilma",     "cyr":"Лильма",     "aAlt":[]},

    # X
        {"lat":"Xenobia",   "cyr":"Зэнобя",     "aAlt":[]},
        {"lat":"Xylophia",  "cyr":"Ксылёфя",    "aAlt":[]},

    # Y
        {"lat":"Yolanda",   "cyr":"Ёлянда",     "aAlt":["Ïolanda"]},
        {"lat":"Yvonne",    "cyr":"Ивона",      "aAlt":["Ivonn"]},

    # Z
        {"lat":"Zofia",     "cyr":"Зофя",       "aAlt":[]},
        {"lat":"Zoë",       "cyr":"Золи",       "aAlt":[]},
    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cRnd_woman = db.rnd_woman(ccTemb)

    # DELETE PREVIOUS ITEMS
    dQuery = cRnd_woman.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    iCnt = 0
    for x in aFemale:
        dWoman = {"idx":iCnt, "cyr":x["cyr"], "lat":x["lat"], "aAlt":x["aAlt"]}
        iCnt += 1
        cRnd_woman.insert_one(dWoman)
    print("Female names ADDED / REPLACED")
#-------------------------------------------------------------------------------
def import_static_surnames():
    """ Sets up surnames. These are not only used to name people but also
    buildings / parks after people. In Ruby, they were hard-coded; they are
    too in this method. However, the method pushes them into the database.
    """

    aStatic_surname = [
        {"lat":"Aitkin",            "cyr":"Эйткин"},
        {"lat":"Àtkin",             "cyr":"Аьткин"},
        {"lat":"Ææz",               "cyr":"Щэщз"},
        {"lat":"Archer",            "cyr":"Ащча"},
        {"lat":"Ïabkovski",         "cyr":"Ябковски"},
        {"lat":"Augustine",         "cyr":"Алгустин"},
        {"lat":"Báli",              "cyr":"Бйльи"},

        {"lat":"Baker",             "cyr":"Бэйка"},
        {"lat":"Pïekarski",         "cyr":"Пекарски"},
        {"lat":"Bauer",             "cyr":"Балэр"},
        {"lat":"Budovlak",          "cyr":"Будовляк"},
        {"lat":"Baumgartner",       "cyr":"Балмщгартнэр"},
        {"lat":"Dzþevoåogrodski",   "cyr":"Джэвощогродзки"},
        {"lat":"Berger",            "cyr":"Бэргер"},
        {"lat":"Gural",             "cyr":"Гураль"},

        {"lat":"Borg",              "cyr":"Борг"},
        {"lat":"Bosåhoff",          "cyr":"Босхофф"},
        {"lat":"Bowdler",           "cyr":"Болдълер"},
        {"lat":"Brewer",            "cyr":"Брущла"},
        {"lat":"Pivñik",            "cyr":"Пивньик"},
        {"lat":"Brown",             "cyr":"Бралн"},
        {"lat":"Bràz",              "cyr":"Браьз"},
        {"lat":"Baxter",            "cyr":"Бэкста"},

        {"lat":"Barstþovïak",       "cyr":"Баршчовяк"},
        {"lat":"Bigosçak",          "cyr":"Бигосляк"},
        {"lat":"Barañski",          "cyr":"Бараньски"},
        {"lat":"Cartwright",        "cyr":"Кащтрайт"},
        {"lat":"Kowak",             "cyr":"Колъак"},
        {"lat":"Chapman",           "cyr":"Чэпмэн"},
        {"lat":"Cook",              "cyr":"Кущк"},
        {"lat":"Kuhþñak",           "cyr":"Кухняк"},

        {"lat":"Cooper",            "cyr":"Кущпа"},
        {"lat":"Mïedzçak",          "cyr":"Медзяк"},
        {"lat":"Cox",               "cyr":"Кокс"},
        {"lat":"Carpenter",         "cyr":"Кащпэнта"},
        {"lat":"Tçesçlak",          "cyr":"Тесляк"},
        {"lat":"Cheeseman",         "cyr":"Чищзмэн"},
        {"lat":"Serovy",            "cyr":"Сэровы"},
        {"lat":"Clark",             "cyr":"Клящк"},

        {"lat":"Búzþak",            "cyr":"Бюжак"},
        {"lat":"Tþehþman",          "cyr":"Чэхман"},
        {"lat":"de Boêr",           "cyr":"дэ Быъщ"},
        {"lat":"de Jong",           "cyr":"дэ Ёнг"},
        {"lat":"Dahïevitþ",         "cyr":"Дахевич"},
        {"lat":"Dàbovski",          "cyr":"Даьбовски"},
        {"lat":"Dwugosþevski",      "cyr":"Длугошэвски"},
        {"lat":"Drozþdzþ",          "cyr":"Дрождж"},

        {"lat":"Yeastman",          "cyr":"Йистман"},
        {"lat":"Dzvoñak",           "cyr":"Дзвоняк"},
        {"lat":"Bellman",           "cyr":"Бэлльман"},
        {"lat":"Eisenman",          "cyr":"Айзэнман"},
        {"lat":"Elizmus",           "cyr":"Эльизмус"},
        {"lat":"Elephant",          "cyr":"Элефант"},
        {"lat":"Swoñski",           "cyr":"Слоньски"},
        {"lat":"Fisher",            "cyr":"Фишэр"},

        {"lat":"Fuller",            "cyr":"Фуллер"},
        {"lat":"Graaff",            "cyr":"Граафф"},
        {"lat":"Grüber",            "cyr":"Груъба"},
        {"lat":"Glaß",              "cyr":"Глясс"},
        {"lat":"Sþklazþ",           "cyr":"Шклаж"},
        {"lat":"Grosþak",           "cyr":"Грошак"},
        {"lat":"Gaïosç",            "cyr":"Гащеось"},
        {"lat":"Gàsçor",            "cyr":"Гаьсор"},

        {"lat":"Gooser",            "cyr":"Гущсэр"},
        {"lat":"Gliñski",           "cyr":"Гльиньски"},
        {"lat":"Gþrobler",          "cyr":"Гъроблер"},
        {"lat":"Gþrobelâr",         "cyr":"Гъробэлящр"},
        {"lat":"de Clay",           "cyr":"дэ Клей"},
        {"lat":"Gowàb",             "cyr":"Голаьб"},
        {"lat":"Dove",              "cyr":"Дав"},
        {"lat":"Grusþka",           "cyr":"Гушна"},

        {"lat":"Gzþehotñik",        "cyr":"Гжэхотньик"},
        {"lat":"Rattler",           "cyr":"Раътълер"},
        {"lat":"Haas",              "cyr":"Щхаас"},
        {"lat":"Hall",              "cyr":"Хощль"},
        {"lat":"Hawkins",           "cyr":"Хощкинс"},
        {"lat":"Hoffer",            "cyr":"Хоффэр"},
        {"lat":"Hoffman",           "cyr":"Хоффман"},
        {"lat":"Hetman",            "cyr":"Хэтман"},

        {"lat":"Hawas",             "cyr":"Халас"},
        {"lat":"Hsþàstþ",           "cyr":"Хшаьшч"},
        {"lat":"Beetleman",         "cyr":"Бищтъльмэн"},
        {"lat":"Ivanov",            "cyr":"Иванов"},
        {"lat":"Irons",             "cyr":"Айэнс"},
        {"lat":"Ignisç",            "cyr":"Игнись"},
        {"lat":"Jones",             "cyr":"Джонс"},
        {"lat":"Ïäger",             "cyr":"Яъгэр"},

        {"lat":"Ïagïelïak",         "cyr":"Ягельяк"},
        {"lat":"Ïastþurak",         "cyr":"Яшчурак"},
        {"lat":"Lizard",            "cyr":"Льизард"},
        {"lat":"Ïèzçor",            "cyr":"Еьзёр"},
        {"lat":"Koler",             "cyr":"Колер"},
        {"lat":"Kozwovski",         "cyr":"Козловски"},
        {"lat":"Kovalski",          "cyr":"Ковальски"},
        {"lat":"Kramer",            "cyr":"Крэйма"},

        {"lat":"Kravtþyk",          "cyr":"Кравчык"},
        {"lat":"Kruger",            "cyr":"Круга"},
        {"lat":"Krüger",            "cyr":"Круъгэр"},
        {"lat":"Kovaltþyk",         "cyr":"Ковальчык"},
        {"lat":"Katþmar",           "cyr":"Качмар"},
        {"lat":"Kamïeñski",         "cyr":"Каменьски"},
        {"lat":"Stone",             "cyr":"Столн"},
        {"lat":"Kitç",              "cyr":"Кить"},

        {"lat":"Warden",            "cyr":"Лощдэн"},
        {"lat":"Kostçowski",        "cyr":"Костёлъски"},
        {"lat":"Church",            "cyr":"Чыч"},
        {"lat":"Lehner",            "cyr":"Лехнэр"},
        {"lat":"Latatþ",            "cyr":"Лятач"},
        {"lat":"Lynch",             "cyr":"Льынч"},
        {"lat":"Lysçak",            "cyr":"Льысяк"},
        {"lat":"Las",               "cyr":"Ляс"},

        {"lat":"Forester",          "cyr":"Форэста"},
        {"lat":"Wabèdzç",           "cyr":"Лабэьдзь"},
        {"lat":"Swan",              "cyr":"Слон"},
        {"lat":"Marsþall",          "cyr":"Маршаль"},
        {"lat":"McCarthy",          "cyr":"Мэкщкадьи"},
        {"lat":"Meyer",             "cyr":"Мэя"},
        {"lat":"Mulder",            "cyr":"Мульдэр"},
        {"lat":"Müller",            "cyr":"Муъля"},

        {"lat":"Murphy",            "cyr":"Мыщфи"},
        {"lat":"Mostñak",           "cyr":"Мостъняк"},
        {"lat":"Mazurak",           "cyr":"Мазурак"},
        {"lat":"Mawy",              "cyr":"Малы"},
        {"lat":"Small",             "cyr":"Смоль"},
        {"lat":"Mehþ",              "cyr":"Мэх"},
        {"lat":"Moß",               "cyr":"Мосс"},
        {"lat":"Mïelets",           "cyr":"Мелец"},

        {"lat":"Miller",            "cyr":"Мыля"},
        {"lat":"Mwyñazþ",           "cyr":"Млыняж"},
        {"lat":"Motþyågèba",        "cyr":"Мочыщгэьба"},
        {"lat":"Wetmouth",          "cyr":"Лэтмалъдь"},
        {"lat":"Mozþyts",           "cyr":"Можыц"},
        {"lat":"Seaman",            "cyr":"Сищмэн"},
        {"lat":"Mroz",              "cyr":"Мроз"},
        {"lat":"Frost",             "cyr":"Фрост"},

        {"lat":"Novak",             "cyr":"Новак"},
        {"lat":"Newman",            "cyr":"Нюмэн"},
        {"lat":"Ñedzçvïedzç",       "cyr":"Недзьведзь"},
        {"lat":"Bear",              "cyr":"Бэщ"},
        {"lat":"Ñebodaï",           "cyr":"Небодай"},
        {"lat":"Norveg",            "cyr":"Норэг"},
        {"lat":"Østerríher",        "cyr":"Ыъстэррайхэр"},
        {"lat":"Ørsþulak",          "cyr":"Ыршуляк"},

        {"lat":"Ogurkïevitþ",       "cyr":"Огуркевич"},
        {"lat":"Oláñik",            "cyr":"Олейньик"},
        {"lat":"Ølman",             "cyr":"Ыъльман"},
        {"lat":"Owovïak",           "cyr":"Оловяк"},
        {"lat":"Leadboy",           "cyr":"Лещдбой"},
        {"lat":"Ozþewski",          "cyr":"Ожэлъски"},
        {"lat":"Eagler",            "cyr":"Ищглер"},
        {"lat":"Pavlak",            "cyr":"Павляк"},

        {"lat":"Papiñak",           "cyr":"Папиняк"},
        {"lat":"Plowright",         "cyr":"Плялрайт"},
        {"lat":"Porter",            "cyr":"Пощта"},
        {"lat":"Pïerogovski",       "cyr":"Пероговски"},
        {"lat":"Pàtþak",            "cyr":"Паьчак"},
        {"lat":"Paliåhleb",         "cyr":"Пальищхлеб"},
        {"lat":"Pazçdzçohþ",        "cyr":"Пазьдзёх"},
        {"lat":"Octobrus",          "cyr":"Октобрус"},

        {"lat":"Pïaskovski",        "cyr":"Пясковски"},
        {"lat":"Sandman",           "cyr":"Сэндмэн"},
        {"lat":"Pozçñak",           "cyr":"Позняк"},
        {"lat":"Ptak",              "cyr":"Птак"},
        {"lat":"Bird",              "cyr":"Быщд"},
        {"lat":"Psþenitçazþ",       "cyr":"Пшэнитяж"},
        {"lat":"Wheatman",          "cyr":"Лищтмэн"},
        {"lat":"Quilter",           "cyr":"Клыльта"},

        {"lat":"Kowdzþak",          "cyr":"Колъджак"},
        {"lat":"Quinman",           "cyr":"Клынман"},
        {"lat":"Rosenberg",         "cyr":"Розэнбэрг"},
        {"lat":"Rybak",             "cyr":"Рыбак"},
        {"lat":"Rak",               "cyr":"Рак"},
        {"lat":"Ruzþetski",         "cyr":"Ружэцки"},
        {"lat":"Roseman",           "cyr":"Ролзмэн"},
        {"lat":"Rytsezþ",           "cyr":"Рыцэж"},

        {"lat":"Knight",            "cyr":"Щнайт"},
        {"lat":"Schiffner",         "cyr":"Шиффнэр"},
        {"lat":"Schmidt",           "cyr":"Шмид"},
        {"lat":"Smið",              "cyr":"Смидь"},
        {"lat":"Shepard",           "cyr":"Шэпыщд"},
        {"lat":"Steiner",           "cyr":"Штайнэр"},
        {"lat":"Stewards",          "cyr":"Стъюыщдс"},
        {"lat":"Stolarski",         "cyr":"Столярски"},

        {"lat":"Sþevtþyk",          "cyr":"Шэвчык"},
        {"lat":"Stþetçiñak",        "cyr":"Шчэтьиняк"},
        {"lat":"Sàdzçak",           "cyr":"Саьдзяк"},
        {"lat":"Judges",            "cyr":"Джаджэс"},
        {"lat":"Sçlivïak",          "cyr":"Сльивяк"},
        {"lat":"Plumer",            "cyr":"Плямэр"},
        {"lat":"Sksþyptþak",        "cyr":"Скшыпчак"},
        {"lat":"Swovak",            "cyr":"Словак"},

        {"lat":"Stèpïak",           "cyr":"Стэьпяк"},
        {"lat":"Strusçak",          "cyr":"Струсяк"},
        {"lat":"Ostrich",           "cyr":"Острич"},
        {"lat":"Stèpski",           "cyr":"Стэьпски"},
        {"lat":"Sçviñoåsuhy",       "cyr":"Сьвинёщсухы"},
        {"lat":"Sþahogratþ",        "cyr":"Шахограч"},
        {"lat":"Chessman",          "cyr":"Чэссман"},
        {"lat":"Stþehovïak",        "cyr":"Шчэховяк"},

        {"lat":"Stþepiñski",        "cyr":"Шчэпиньски"},
        {"lat":"Stþot",             "cyr":"Шчот"},
        {"lat":"Stçibïor",          "cyr":"Стьибёр"},
        {"lat":"Stçañak",           "cyr":"Стяняк"},
        {"lat":"Sçledzç",           "cyr":"Следзь"},
        {"lat":"Herring",           "cyr":"Хэрринг"},
        {"lat":"Taylor",            "cyr":"Тэйля"},
        {"lat":"Sþevts",            "cyr":"Шэвц"},

        {"lat":"Thatcher",          "cyr":"Дяъча"},
        {"lat":"åThompson",         "cyr":"Томсон"},
        {"lat":"Tanner",            "cyr":"Таънна"},
        {"lat":"Skuzþak",           "cyr":"Скужак"},
        {"lat":"Tiler",             "cyr":"Тайлэр"},
        {"lat":"Turner",            "cyr":"Тыщна"},
        {"lat":"Tègosç",            "cyr":"Тэьгось"},
        {"lat":"Trèbitski",         "cyr":"Трэьбицки"},

        {"lat":"Tràbatþ",           "cyr":"Траьбач"},
        {"lat":"Horn",              "cyr":"Хощн"},
        {"lat":"Tþesçara",          "cyr":"Чэсяра"},
        {"lat":"Usher",             "cyr":"Аша"},
        {"lat":"Uhrmacher",         "cyr":"Уурмахэр"},
        {"lat":"Zegaromistþ",       "cyr":"Зэрарощмишч"},
        {"lat":"Urbañak",           "cyr":"Урбаняк"},
        {"lat":"Ustçiñski",         "cyr":"Устьиньски"},

        {"lat":"van den Berg",      "cyr":"фан дэн Бэрг"},
        {"lat":"van der Trèbovitsþenhavn",  "cyr":"ван дэр Трэьбовичэнхавэн"},
        {"lat":"Vogel",             "cyr":"Фогэль"},
        {"lat":"Valusçevski",       "cyr":"Валюсевски"},
        {"lat":"Vàsçak",            "cyr":"Ваьсяк"},
        {"lat":"Vèswavski",         "cyr":"Вэьславски"},
        {"lat":"Vègzþyn",           "cyr":"Вэьгжын"},
        {"lat":"Vïeswav",           "cyr":"Веслав"},

        {"lat":"Vwosçak",           "cyr":"Влосяк"},
        {"lat":"Vodñik",            "cyr":"Водъньик"},
        {"lat":"Waterman",          "cyr":"Лотамэн"},
        {"lat":"Wilkins",           "cyr":"Лылькинс"},
        {"lat":"Wolf",              "cyr":"Лульф"},
        {"lat":"Weber",             "cyr":"Лэбба"},
        {"lat":"Walker",            "cyr":"Лока"},
        {"lat":"Weiver",            "cyr":"Лива"},

        {"lat":"Williams",          "cyr":"Лыльемс"},
        {"lat":"Wilson",            "cyr":"Лыльсэн"},
        {"lat":"Vozçñak",           "cyr":"Возняк"},
        {"lat":"Voïtçik",           "cyr":"Войтьик"},
        {"lat":"Visçñevski",        "cyr":"Висневски"},
        {"lat":"Wright",            "cyr":"Щрайт"},
        {"lat":"Yeland",            "cyr":"Еленд"},
        {"lat":"Ïoman",             "cyr":"Ёман"},

        {"lat":"Zimmerman",         "cyr":"Циммэрман"},
        {"lat":"Zajàc",             "cyr":"Заяьц"},
        {"lat":"åHare",             "cyr":"Хэщ"},
        {"lat":"Zþezçñik",          "cyr":"Жэзньик"},
        {"lat":"Butcher",           "cyr":"Буча"},
        {"lat":"Zþàdzçak",          "cyr":"Жаьдзяк"},
        {"lat":"Zþymïan",           "cyr":"Жымян"},
        {"lat":"Roman",             "cyr":"Роман"},

        {"lat":"Zþotkïevski",       "cyr":"Жоткевски"},
        {"lat":"Zçàbek",            "cyr":"Зяьбэк"},
        {"lat":"Zçeliñski",         "cyr":"Зельиньски"},
        {"lat":"Zïadevski",         "cyr":"Зъядэвски"},
        {"lat":"Zwotek",            "cyr":"Злотэк"},
        {"lat":"Zþowèdzç",          "cyr":"Жолэьдзь"},
    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cRnd_static_surname = db.rnd_static_surname(ccTemb)

    # DELETE PREVIOUS ITEMS
    dQuery = cRnd_static_surname.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    iCnt = 0
    for x in aStatic_surname:
        dStatic_surname = {"idx":iCnt, "cyr":x["cyr"], "lat":x["lat"]}
        iCnt += 1
        cRnd_static_surname.insert_one(dStatic_surname)
    print("Static Surnames ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_dynamic_surnames():
    """ Sets up surname-prefixes. These are not only used to name people but
    also buildings / parks after people. In Ruby, they were hard-coded; they are
    too in this method. However, the method pushes them into the database.
    """

    aDynamic_surname = [
        {"lat":"Bær",       "cyr":"Баър"},
        {"lat":"Bell",      "cyr":"Бэль"},
        {"lat":"Bÿer",      "cyr":"Биер"},
        {"lat":"åBlack",    "cyr":"Блек"},
        {"lat":"åBlue",     "cyr":"Блю"},
        {"lat":"åBrown",    "cyr":"Бралн"},
        {"lat":"Ðor",       "cyr":"Дёр"},
        {"lat":"åSwan",     "cyr":"Слон"},
        {"lat":"åBird",     "cyr":"Быщрд"},
        {"lat":"åCrab",     "cyr":"Крэб"},

        {"lat":"Sàd",       "cyr":"Саьд"},
        {"lat":"åShard",    "cyr":"Шащрд"},
        {"lat":"Glaß",      "cyr":"Гласс"},
        {"lat":"Gold",      "cyr":"Голд"},
        {"lat":"Grá",       "cyr":"Грэй"},
        {"lat":"Grün",      "cyr":"Груън"},
        {"lat":"åGreen",    "cyr":"Грищн"},
        {"lat":"Grüb",      "cyr":"Груъб"},
        {"lat":"Holtz",     "cyr":"Хольц"},
        {"lat":"Ïæger",     "cyr":"Яъгэр"},

        {"lat":"Kauf",      "cyr":"Калъф"},
        {"lat":"åOrange",   "cyr":"Ориндж"},
        {"lat":"Red",       "cyr":"Рэд"},
        {"lat":"åSand",     "cyr":"Санд"},
        {"lat":"åSilver",   "cyr":"Сильвэр"},
        {"lat":"Srebro",    "cyr":"Срэбро"},
        {"lat":"Süß",       "cyr":"Суъсс"},
        {"lat":"åWhite",    "cyr":"Лайт"},
        {"lat":"Wolf",      "cyr":"Лульф"},
        {"lat":"åYellow",   "cyr":"Елёл"},
    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cRnd_dynamic_surname = db.rnd_dynamic_surname(ccTemb)

    # DELETE PREVIOUS ITEMS
    dQuery = cRnd_dynamic_surname.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    iCnt = 0
    for x in aDynamic_surname:
        dDynamic_surname = {"idx":iCnt, "cyr":x["cyr"], "lat":x["lat"]}
        iCnt += 1
        cRnd_dynamic_surname.insert_one(dDynamic_surname)
    print("Dynamic Surnames ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_suffix_surnames():
    """ Sets up surname-suffixes. These are not only used to name people but
    also buildings / parks after people. In Ruby, they were hard-coded; they are
    too in this method. However, the method pushes them into the database.
    """

    aSuffix_surname = [
        {"lat":"mann",      "cyr":"манн"},
        {"lat":"son",       "cyr":"сон"},
        {"lat":"issen",     "cyr":"иссэн"},
        {"lat":"berg",      "cyr":"бэрг"},
        {"lat":"baum",      "cyr":"балм"},
        {"lat":"meer",      "cyr":"мия"},
        {"lat":"ski",       "cyr":"ски"},
        {"lat":"sþtín",     "cyr":"штайн"},

        {"lat":"s",         "cyr":"с"},
        {"lat":"inger",     "cyr":"ингэр"},
        {"lat":"wälder",    "cyr":"ваъльдэр"},
        {"lat":"høvn",      "cyr":"хыъвн"},
        {"lat":"ovski",     "cyr":"овски"},
        {"lat":"itþ",       "cyr":"ич"},
        {"lat":"ïak",       "cyr":"як"},
    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cRnd_suffix_surname = db.rnd_suffix_surname(ccTemb)

    # DELETE PREVIOUS ITEMS
    dQuery = cRnd_suffix_surname.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    iCnt = 0
    for x in aSuffix_surname:
        dSuffix_surname = {"idx":iCnt, "cyr":x["cyr"], "lat":x["lat"]}
        iCnt += 1
        cRnd_suffix_surname.insert_one(dSuffix_surname)
    print("Surname suffixes ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_demographic_const():
    """ Sets up the various demographic constants, group ages , prison rates,
    to mention a fiew . In Ruby, they were hard-coded; they are too in this
    method. However, the method pushes them into the database.
    """

    aThe_data = {
        "infant_max_age":2,                 # Stays with mother
        "toddler_max_age":5,                # Attends pre-school and play groups
        "primary_max_age":10,               # Single teacher all subjects
        "middle_max_age":14,                # Subject specialists, seperate sch.
        "high_max_age":18,                  # Subject specialists, seperate sch.
        "tertiary_max_age":25,              # Age for calculations for univ.
        "min_work_age":19,                  # Straight after compulsory high sch
        "max_work_age":65,                  # Retirement age
        "prison_rate":0.0052,               # Ratio of pop. caught in crime
        "nursing_home_rate":0.0074,         # Ratio of pop. needing daily assist
        "preschool_rate":1.00,              # Ratio of todlers going to school
        "life_expect":80,                   # For population pyramid (linear)
        "fraternal_rate":1.9,               # No of unmarried sharing housing
            # Ratio of marriages for >25 yo.
        "aPartners":{"r":0.95, "h":0.8, "m":0.8, "l":0.8, "p":0.8},
            # desired amount per married couple. Random element is also introd.
        "aChildren":{"r":2,"h":3,"m":2,"l":3,"p":3},
            # Ratio's of children going to private / religious school, for ages
            # 5 to 18
        "aSpeciality_school":{"r":0.9,"h":0.4,"m":0.01,"l":0.005,"p":0.005},
            # School for blind / deaf / mentally ill / wheel-chaired students
            # of ages 5 to 18
        "aDisabled_school":{"r":0.004,"h":0.004,"m":0.004,"l":0.004,"p":0.004},
            # Lowest level of tertiary education, for artisan training
            # (electrician / plumber)
        "aCollege":{"r":0.0001,"h":0.0001,"m":0.01,"l":0.0073,"p":0.005},
            # Middle level of tertiary education for technician training
            # (nurse, technician, teacher)
        "aPolytech":{"r":0.01,"h":0.05,"m":0.01,"l":0.0006,"p":0.0002},
            # Highest level of tertiary education (Doctor, engineer)
        "aUniversity":{"r":0.05,"h":0.01,"m":0.001,"l":0.0006,"p":0.0001},
            # Ratio of partners prefering to raise children
        "aHousewife":{"r":0.1,"h":0.4,"m":0.2,"l":0.05,"p":0.05},
            # Religions available with demographic split
        "aaReligion":[
            {"name":"Dreide Renaissance Kirch","adj":"Renásàsers",
                "code":"3R","r":0.0,"h":0.4,"m":0.4,"l":0.5,"p":0.1},
            {"name":"Anglican Church","adj":"Anglican Christians",
                "code":"AN","r":0.0,"h":0.1,"m":0.25,"l":0.16,"p":0.0},
            {"name":"Roman Catholic Church","adj":"Roman Catholics",
                "code":"RC","r":0.24,"h":0.05,"m":0.1,"l":0.04,"p":0.05},
            {"name":"Deltæðømm Religion","adj":"Deltæðømmysts",
                "code":"DD","r":0.01,"h":0.05,"m":0.1,"l":0.25,"p":0.85},
            {"name":"Judaism","adj":"Jews",
                "code":"JW","r":0.5,"h":0.15,"m":0.1,"l":0.0,"p":0.0},
            {"name":"Islam","adj":"Muslims",
                "code":"IS","r":0.25,"h":0.25,"m":0.05,"l":0.05,"p":0.0}],

        # NEW: vehicles per person (1930)
        "aaVehicles" : {
            "aBicycle":   {"r":0.01, "h":0.01, "m":0.01, "l":0.1, "p":0.9},
            "aMotorbike": {"r":0.025, "h":0.16, "m":0.85, "l":0.4, "p":0.05},
            "aCar":       {"r":0.9, "h":0.50, "m":0.25, "l":0.07, "p":0.005},
            "aAircraft":  {"r":0.0001, "h":0, "m":0, "l":0, "p":0},
            "retiree_derate": 0.5,      # Reduce chances for retiree
            "bachlelor_derate": 0.66,
        },

        # Chances that the person will use communal transport
        "aPublic_transport":
            {"r":0.0001, "h":0.1, "m":0.66, "l":0.85, "p":0.99},
    }


    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cDemogfx_const = db.demogfx_const(ccTemb)

    # DELETE PREVIOUS ITEMS
    dQuery = cDemogfx_const.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    for x in aThe_data:
        dDemogfx_const = {x:aThe_data[x]}
        cDemogfx_const.insert_one(dDemogfx_const)

    print("Demographic constants ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_city_services():
    """ Sets up constants for services like the police, fire, schooling """

    aThe_data = [
# POLICE SERVICES
        {
            "code":"5YP",
            "name":"Police",
            "serves":"iTOT-PAX",
            "ratio":200,                       # 1 policeman / ... people
            "capacity":8000,                   # ... people per station
            "aFootprint":{"qty":0.36 , "uom":"ha"}, # 60m x 60m
            "aMain":{   # POLICEMAN
                "xType1":'LM', "iRate1":50,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":50,
                "fEmpl_per_veh":4},
            "aSupv":{   # DETECTIVE
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":1, "fMain_per_empl": 10},
            "aMgmt":{   # MANAGERS
                "xType1":'HM', "iRate1":50,
                "xType2":'HF', "iRate2":50,
                "fEmpl_per_veh":1, "fMain_per_empl": 40},
            "aSupt":{   # DESPATCHERS / CLEANERS
                "xType1":'PM', "iRate1":50,
                "xType2":'PF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 10},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YP" Number plates
        },
# FIRE-FIGHTING SERVICES
        {
            "code":"5YF",
            "name":"Fire Dept",
            "serves":"iTOT-PAX",
            "ratio":500,                       # 1 fireman / ... people
            "capacity":10000,                  # ... people per station
            "aFootprint":{"qty":0.18 , "uom":"ha"}, # 30m x 60m
            "aMain":{   # FIREMEN
                "xType1":'LM', "iRate1":95,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":5,
                "fEmpl_per_veh":4},
            "aSupv":{   # SCENE CHIEF
                "xType1":'MM', "iRate1":95,
                "xType2":'MF', "iRate2":5,
                "fEmpl_per_veh":1, "fMain_per_empl": 20},
            "aMgmt":{   # MANAGERS
                "xType1":'HM', "iRate1":90,
                "xType2":'HF', "iRate2":10,
                "fEmpl_per_veh":1, "fMain_per_empl": 30},
            "aSupt":{   # DESPATCH / CLEANERS
                "xType1":'PM', "iRate1":50,
                "xType2":'PF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 10},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YF" Number plates
        },
# COMMUNITY CLINIC
        {
            "code":"5YH",
            "name":"Community Clinic",
            "serves":"iTOT-PAX",
            "ratio":500,                       # 1 doctor / ... people
            "capacity":10000,                  # ... people per ... station
            "aFootprint":{"qty":0.18 , "uom":"ha"}, # 30m x 60m
            "aMain":{   # DOCTORS
                "xType1":'HM', "iRate1":75,     # Both rates must add up to 100
                "xType2":'HF', "iRate2":25,
                "fEmpl_per_veh":0},
            "aSupv":{   # SPECIALIST / X-RAY
                "xType1":'HM', "iRate1":80,
                "xType2":'HF', "iRate2":20,
                "fEmpl_per_veh":0, "fMain_per_empl": 30},
            "aMgmt":{   # HOSPITAL MANAGEMENT
                "xType1":'HM', "iRate1":70,
                "xType2":'HF', "iRate2":30,
                "fEmpl_per_veh":1, "fMain_per_empl": 15},
            "aSupt":{   # NURSES / CLEANERS / PARAMEDICS
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":6, "fMain_per_empl": 4},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YH" Number plates
        },
# COMMUNITY GOVERNANCE
        {
            "code":"5YG",
            "name":"Community Governance",
            "serves":"iTOT-PAX",
            "ratio":750,                       # 1 politician / ... people
            "capacity":5000,                   # ... people per ... station
            "aFootprint":{"qty":0.36 , "uom":"ha"}, # 60m x 60m
            "aMain":{   # COUNCELLOR
                "xType1":'LM', "iRate1":95,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":5,
                "fEmpl_per_veh":0},
            "aSupv":{   # COUNCIL SUPERVISOR
                "xType1":'MM', "iRate1":95,
                "xType2":'MF', "iRate2":5,
                "fEmpl_per_veh":0, "fMain_per_empl": 15},
            "aMgmt":{   # CITY MANAGEMENT
                "xType1":'HM', "iRate1":90,
                "xType2":'HF', "iRate2":10,
                "fEmpl_per_veh":1, "fMain_per_empl": 60},
            "aSupt":{   # CASHIERS / EVALUATORS / METER-READERS
                "xType1":'PM', "iRate1":80,
                "xType2":'PF', "iRate2":20,
                "fEmpl_per_veh":5, "fMain_per_empl": 4},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YG" Number plates
        },
# COMMUNITY PRE-SCHOOL
        {
            "code":"ED0",
            "name":"Pre-school",
            "serves":"ED0-PAX",
            "ratio":5,                         # 1 teacher / ... people
            "capacity":30,                   # ... people per ... station
            "aFootprint":{"qty":0.18 , "uom":"ha"}, # 30m x 60m
            "aMain":{   # TEACHER
                "xType1":'LM', "iRate1":5,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":95,
                "fEmpl_per_veh":0},
            "aSupv":{   # n/a
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 0},
            "aMgmt":{   # PRINCIPAL
                "xType1":'MM', "iRate1":10,
                "xType2":'MF', "iRate2":90,
                "fEmpl_per_veh":1, "fMain_per_empl": 4},
            "aSupt":{   # GROUNDSKEEPER/HANDYMAN, LUNCH LADY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 3},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YE" Number plates
        },
# COMMUNITY PRIMARY SCHOOL
        {
            "code":"ED1",
            "name":"Primary School",
            "serves":"ED1-PAX",
            "ratio":20,                         # 1 teacher / ... people
            "capacity":500,                     # ... people per ... station
            "aFootprint":{"qty":3.5 , "uom":"ha"}, # 175m x 200m
            "aMain":{   # TEACHER
                "xType1":'LM', "iRate1":15,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":85,
                "fEmpl_per_veh":0},
            "aSupv":{   # n/a
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 0},
            "aMgmt":{   # PRINCIPAL
                "xType1":'MM', "iRate1":20,
                "xType2":'MF', "iRate2":80,
                "fEmpl_per_veh":1, "fMain_per_empl": 10},
            "aSupt":{   # GROUNDSKEEPER/HANDYMAN, LUNCH LADY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 6},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YE" Number plates
        },
# COMMUNITY MIDDLE SCHOOL
        {
            "code":"ED2",
            "name":"Middle School",
            "serves":"ED2-PAX",
            "ratio":28,                         # 1 teacher / ... people
            "capacity":840,                     # ... people per ... station
            "aFootprint":{"qty":8.75 , "uom":"ha"}, # 250m x 350m
            "aMain":{   # TEACHER
                "xType1":'LM', "iRate1":50,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":50,
                "fEmpl_per_veh":0},
            "aSupv":{   # n/a
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 0},
            "aMgmt":{   # PRINCIPAL
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":1, "fMain_per_empl": 12},
            "aSupt":{   # GROUNDSKEEPER/HANDYMAN, LUNCH LADY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 6},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YE" Number plates
        },
# COMMUNITY HIGH-SCHOOL
        {
            "code":"ED3",
            "name":"High School",
            "serves":"ED3-PAX",
            "ratio":32,                         # 1 teacher / ... people
            "capacity":960,                     # ... people per ... station
            "aFootprint":{"qty":12.0 , "uom":"ha"}, # 300m x 400m
            "aMain":{   # TEACHER
                "xType1":'MM', "iRate1":50,     # Both rates must add up to 100
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":0},
            "aSupv":{   # n/a
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 0},
            "aMgmt":{   # PRINCIPAL
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":1, "fMain_per_empl": 12},
            "aSupt":{   # GROUNDSKEEPER/HANDYMAN, LUNCH LADY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 5},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YE" Number plates
        },
# OLD AGE HOME
        {
            "code":"OAH",
            "name":"Old Age Home",
            "serves":"OAH-PAX",
            "ratio":5,                          # 1 caregivers / ... people
            "capacity":30,                     # ... people per ... station
            "aFootprint":{"qty":0.36 , "uom":"ha"}, # 60m x 60m
            "aMain":{   # CAREGIVER
                "xType1":'LM', "iRate1":10,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":90,
                "fEmpl_per_veh":0},
            "aSupv":{   # NURSE ON DUTY
                "xType1":'LM', "iRate1":10,
                "xType2":'LF', "iRate2":90,
                "fEmpl_per_veh":0, "fMain_per_empl": 3},
            "aMgmt":{   # PRINCIPAL
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":1, "fMain_per_empl": 4},
            "aSupt":{   # GROUNDSKEEPER/HANDYMAN, LUNCH LADY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 3},
            "iStatic_veh":0,
            "sOwn_number_plates": "dynamic",         # "YH" Number plates
        },
# THE CORNER SHOP
        {
            "code":"5SŠ",
            "name":"Small Shop",
            "serves":"iTOT-PAX",
            "ratio":250,                          # 1 shopkeeper / ... people
            "capacity":4000,                      # ... people per ... station
            "aFootprint":{"qty":0.18 , "uom":"ha"}, # 30m x 60m
            "aMain":{   # SALES CLARK
                "xType1":'PM', "iRate1":90,     # Both rates must add up to 100
                "xType2":'PF', "iRate2":10,
                "fEmpl_per_veh":0},
            "aSupv":{   # SUPERVISOR
                "xType1":'LM', "iRate1":90,
                "xType2":'LF', "iRate2":10,
                "fEmpl_per_veh":0, "fMain_per_empl": 10},
            "aMgmt":{   # SHOP-KEEPER
                "xType1":'MM', "iRate1":80,
                "xType2":'MF', "iRate2":20,
                "fEmpl_per_veh":1, "fMain_per_empl": 6},
            "aSupt":{   # DRIVER, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":2, "fMain_per_empl": 8},
            "iStatic_veh":0,
            "sOwn_number_plates": "none",         # County Number plates
        },
# Library system
        {
            "code":"5LX",
            "name":"Community Library",
            "serves":"iTOT-PAX",
            "ratio":1000,                          # 1 librarian / ... people
            "capacity":5000,                      # ... people per ... station
            "aFootprint":{"qty":0.18 , "uom":"ha"}, # 30m x 60m
            "aMain":{   # LIBRARIAN CLARK
                "xType1":'LM', "iRate1":10,     # Both rates must add up to 100
                "xType2":'LF', "iRate2":90,
                "fEmpl_per_veh":0},
            "aSupv":{   # N/A
                "xType1":'LM', "iRate1":90,
                "xType2":'LF', "iRate2":10,
                "fEmpl_per_veh":0, "fMain_per_empl": 0},
            "aMgmt":{   # LIBRARY-KEEPER
                "xType1":'MM', "iRate1":80,
                "xType2":'MF', "iRate2":20,
                "fEmpl_per_veh":1, "fMain_per_empl": 4},
            "aSupt":{   # SECURITY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 2.5},
            "iStatic_veh":0,
            "sOwn_number_plates": "both",         # "YI" Number plates
        },

# Theatre system
        {
            "code":"5TH",
            "name":"Community Theatre",
            "serves":"iTOT-PAX",
            "ratio":100,                           # 1 actor / ... people
            "capacity":800,                        # ... people per ... station
            "aFootprint":{"qty":0.36 , "uom":"ha"}, # 60m x 60m
            "aMain":{   # ACTOR
                "xType1":'PM', "iRate1":50,     # Both rates must add up to 100
                "xType2":'PF', "iRate2":50,
                "fEmpl_per_veh":0},
            "aSupv":{   # DIRECTOR
                "xType1":'LM', "iRate1":50,
                "xType2":'LF', "iRate2":50,
                "fEmpl_per_veh":0, "fMain_per_empl": 5},
            "aMgmt":{   # MANAGEMENT
                "xType1":'MM', "iRate1":50,
                "xType2":'MF', "iRate2":50,
                "fEmpl_per_veh":1, "fMain_per_empl": 6},
            "aSupt":{   # SECURITY, CLEANER, TICKET SALES
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 2},
            "iStatic_veh":0,
            "sOwn_number_plates": "none",         # County Number plates
        },
# Postal system
        {
            "code":"5PO",
            "name":"Community Post Office",
            "serves":"iTOT-PAX",
            "ratio":1000,                          # 1 clark / ... people
            "capacity":10000,                      # ... people per ... station
            "aFootprint":{"qty":0.1 , "uom":"ha"},
            "aMain":{   # LIBRARIAN CLARK
                "xType1":'PM', "iRate1":10,     # Both rates must add up to 100
                "xType2":'PF', "iRate2":90,
                "fEmpl_per_veh":0},
            "aSupv":{   # SUPERVISOR
                "xType1":'LM', "iRate1":90,
                "xType2":'LF', "iRate2":10,
                "fEmpl_per_veh":0, "fMain_per_empl": 5},
            "aMgmt":{   # POST MASTER
                "xType1":'MM', "iRate1":80,
                "xType2":'MF', "iRate2":20,
                "fEmpl_per_veh":1, "fMain_per_empl": 6},
            "aSupt":{   # SECURITY, CLEANER
                "xType1":'PM', "iRate1":20,
                "xType2":'PF', "iRate2":80,
                "fEmpl_per_veh":0, "fMain_per_empl": 2.5},
            "iStatic_veh":0,
            "sOwn_number_plates": "both",         # "YI" Number plates
        },
    ]

    import modules.x_database as db
    ccTemb = db.connect()                                    # Project data base
    cCity_services_const = db.city_services_const(ccTemb)

    dQuery = cCity_services_const.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    for x in aThe_data:
        cCity_services_const.insert_one(x)
    print("City services ADDED / REPLACED")

#-------------------------------------------------------------------------------
def import_workplaces():
    """ Sets up the farms, factories, offices. Effectively sets up the demand
    for a workforce.
    """

    lThe_data = [
#  --  --  --  --  --  --  --  --  --  --  --  --
    # AGRICULTURAL:
        # Wheat farm
        {
            "code":"AWH",
            "name":"Wheat Farm",                   # Name that comes up in menus
            "type":"Agricultural",
            "default":"wheat farm",
            # Number of cars / motorbikes that this workplace has, regardless
            # of its size.
            "iStatic_veh":4,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
            # This group of workers is linked directly to the other statistics.
            # For example, if a farm has 100ha, and we have 1.2 empl/ha, then
            # the total will be 120 empl(oyees) for that farm.
                "aMain":{             # The workforce linked to other statistics
                    # Since this is a working example, it is worth pointing out
                    # that the units of labour measurement have been hard-coded
                    # where the data is read. The legal units are:
                    # "empl/ha" (Farms)
                    # "empl/sq.km" (Cattle ranches, forest workers)
                    # "empl" (Shops, quarries, mines)
                    # "sq.m/empl" (Manufacturing factories, 1-storey offices)
                    # "sq.m/floor/empl" (Multi-storey buildings)
                    "fRate":1.0, "units":"empl/ha",    # Link to other statistics
                    # Specify the demographic in this positon. first character
                    # is the wealth (R, H, M, L, P representing the 5 income
                    # groups as rich, high-income, mid-income, low-income and
                    # poor). Second character is the gender (male or female).
                    # iRate1 + iRate2 = 100. This effectively is the 'gender'
                    # split
                    "xType1": "PM", "iRate1": 52,     # Demographic employed ...
                    "xType2": "PF", "iRate2": 48,     # iRate1 + iRate2 = 100
                    # If this group has access to a company car or motorbike,
                    # then indicate how many employees per vehicle. If '5.0',
                    # then there is one vehilce for every 5 employees. A zero
                    # indicates no access.
                    "fEmpl_per_veh":0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 53,
                    "xType2": "LF", "iRate2": 47,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 450, "units": "empl/main",
                    "xType1": "HM", "iRate1": 20,
                    "xType2": "MM", "iRate2": 80,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 80, "units": "empl/main",
                    "xType1": "MM", "iRate1": 33,
                    "xType2": "LF", "iRate2": 67,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"wheat",
                # What is the average output. The first is a float in the units
                # specifed afterwards.
                "fRate":5.0, "units":"t/ha",
                # Each instance of this 'farm' will be randomised according to
                # the numbers below
                "fMin_yield":0.6, "fMax_yield":1.66,
                # On-site storage use this if this is a warehouse
                "fStore_capacity":0
                },
                {"name":"hay",
                "fRate":0.5, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
            ],
        },

        # Maize farm
        {
            "code":"AMZ",
            "name":"Maize Farm",
            "type":"Agricultural",
            "default":"maize farm",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1.0, "units":"empl/ha",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 15, "units": "empl/main",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"maize",
                "fRate":6.0, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
                {"name":"straw (maize)",
                "fRate":0.75, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
            ],
        },

        # Rice farm
        {
            "code":"ARI",
            "name":"Rice Farm",
            "type":"Agricultural",
            "default":"rice farm",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1.5, "units":"empl/ha",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"rice",
                "fRate":5.0, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
            ],
        },

        # Cocoa plantation
        {
            "code":"ACH",
            "name":"Cocoa Plantation",
            "type":"Agricultural",
            "default":"cocoa plantation",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1.1, "units":"empl/ha",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"cocoa beans",
                "fRate":5.0, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
            ],
        },

        # Coffee plantation
        {
            "code":"ACF",
            "name":"Coffee Plantation",
            "type":"Agricultural",
            "default":"coffee plantation",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1.1, "units":"empl/ha",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"coffee beans",
                "fRate":5.0, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
            ],
        },

        # Fruit or vegetable farm
        {
            "code":"AFW",
            "name":"Fruit/Veg Plantation",
            "type":"Agricultural",
            "default":"fruit/veg farm",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":2.5, "units":"empl/ha",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 120, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"misc fruit/veg",
                "fRate":6.0, "units":"t/ha",
                "fMin_yield":0.6, "fMax_yield":1.66,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # LIVESTOCK:
        # Cattle ranch
        {
            "code":"LBF",
            "name":"Cattle Ranch",
            "type":"Husbandary",
            "default":"cattle ranch",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":7.5, "units":"empl/sq.km",
                    "xType1": "PM", "iRate1": 95,
                    "xType2": "PF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":3.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 95,
                    "xType2": "LF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"cattle",
                # 125 head / sq.km @ 800kg each = 100t/sq.km
                "fRate":100, "units":"t/sq.km",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Chicken farm
        {
            "code":"LCH",
            "name":"Chicken Ranch",
            "type":"Husbandary",
            "default":"chicken farm",
            "sOwn_number_plates": "none",         # County Number plates
            "iStatic_veh":2,
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    # 3,000 chickens per empl, 3sq.m per chicken
                    "fRate":1.11, "units":"empl/ha",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 15, "units": "empl/main",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 50, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 50, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"chicken",
                # Chicken weighs 2.65kg, 8 weeks from egg to table, so, call it
                # 4 batches per year. 3000 chickens per main, 2.65kg/chicken
                # 7,950kg / main * 4 batches / year = 31.8t / main
                # approx 34.9t / ha
                "fRate":31.8, "units":"t/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # FACTORIES AND PLANTS:
        # Misc factories at 50sq.m/empl
        {
            "code":"FXX",
            "name":"Factory @ 50sq.m/empl",
            "type":"City Workplaces",
            "default":"misc factories",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":50, "units":"sq.m/empl",
                    "xType1": "PM", "iRate1": 66,
                    "xType2": "PF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 66,
                    "xType2": "LF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # Miscellaneous factories make goods. It would be impossible to
                # think up every commodity made.
                {"name":"Misc Industrial",
                "fRate":5, "units":"t/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Misc factories with manual input
        {
            "code":"FME",
            "name":"Factory (man empl cnt)",
            "type":"City Workplaces",
            "default":"m.e.c factories",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "PM", "iRate1": 66,
                    "xType2": "PF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 66,
                    "xType2": "LF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # Miscellaneous factories make goods. It would be impossible to
                # think up every commodity made.
                {"name":"Misc Industrial",
                "fRate":5, "units":"t/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Heavy industry: (like refinery in GY0, or steel plant in TJ0)
        {
            "code":"FHI",
            "name":"Heavy industry (man empl cnt)",
            "type":"City Workplaces",
            "default":"",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "PM", "iRate1": 99,
                    "xType2": "PF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2": 1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 5.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "HM", "iRate1": 95,
                    "xType2": "RF", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # Miscellaneous factories make goods. It would be impossible to
                # think up every commodity made.
                {"name":"Misc Industrial",
                "fRate":5, "units":"t/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },


#  --  --  --  --  --  --  --  --  --  --  --  --
    # MINERAL EXTRACTION:
        # Stone quarry.
        {
            "code":"MST",
            "name":"Stone Quarry",
            "type":"Mineral Extraction",
            "default":"stone quarry",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "PM", "iRate1": 95,
                    "xType2": "PF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 95,
                    "xType2": "LF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"crushed stone",
                "fRate":0.5, "units":"kt/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Granite quarry.
        {
            "code":"MGR",
            "name":"Granite Quarry",
            "type":"Mineral Extraction",
            "default":"granite quarry",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "PM", "iRate1": 95,
                    "xType2": "PF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 95,
                    "xType2": "LF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"granite",
                "fRate":0.22, "units":"kt/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Diamond Granite quarry.
        {
            "code":"MDG",
            "name":"Diamond Granite Quarry",
            "type":"Mineral Extraction",
            "default":"diamond granite quarry",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "PM", "iRate1": 95,
                    "xType2": "PF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 95,
                    "xType2": "LF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"granite",
                "fRate":0.11, "units":"kt/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Clay pit.
        {
            "code":"MST",
            "name":"Clay Pit",
            "type":"Mineral Extraction",
            "default":"clay pit",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "PM", "iRate1": 95,
                    "xType2": "PF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 95,
                    "xType2": "LF", "iRate2": 5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "MF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 250, "units": "empl/main",
                    "xType1": "MM", "iRate1": 70,
                    "xType2": "PF", "iRate2": 30,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"clay",
                "fRate":0.130, "units":"kt/main",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # Miscellaneous:
        # Multi-storey offices buildings
        {
            "code":"OMB",
            "name":"Multi-storey office",
            "type":"City Workplaces",
            "default":"multi-storey offices",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":12, "units":"sq.m/floor/empl",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "HM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "RM", "iRate1":  2,
                    "xType2": "HM", "iRate2": 98,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Offices with (Manual employee count)
        {
            "code":"OME",
            "name":"Offices (man empl cnt)",
            "type":"City Workplaces",
            "default":"m.e.c. offices",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":12, "units":"empl",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "HM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "RM", "iRate1":  2,
                    "xType2": "HM", "iRate2": 98,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Park ranger at 0.45 empl/sq.km
        {
            "code":"OPR",
            "name":"Park ranger (0.45 empl/sq.km)",
            "type":"Governance",
            "default":"park ranger",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":0.45, "units":"empl/sq.km",
                    "xType1": "LM", "iRate1": 66,
                    "xType2": "LF", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":2.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 10, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 40, "units": "empl/main",
                    "xType1": "HM", "iRate1": 50,
                    "xType2": "HM", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 25, "units": "empl/main",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Miscallenous like charites, parking attendants (Manual employee count)
        {
            "code":"OXX",
            "name":"Miscallenous: charites, taxis, (man empl cnt @ 0.1*pop)",
            "type":"City Workplaces",
            "default":"misc workers",
            "iStatic_veh":0,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":12, "units":"empl",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 10, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 50, "units": "empl/main",
                    "xType1": "HM", "iRate1": 50,
                    "xType2": "HM", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 25, "units": "empl/main",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Airfield / Airport: different from airlines.
        {
            "code":"QAF",
            "name":"Airfield",
            "type":"City Workplaces",
            "default":"airfield",
            "iStatic_veh":0,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":12, "units":"empl",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 10, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 50, "units": "empl/main",
                    "xType1": "HM", "iRate1": 50,
                    "xType2": "HM", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 25, "units": "empl/main",
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # RETAIL
        # Misc shops at 50 sq.m/empl
        {
            "code":"RXS",
            "name":"Misc / specialist shops (50 sq.m/empl)",
            "type":"Retail",
            "default":"misc shops (50sqm/empl)",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":50, "units":"sq.m/floor/empl",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 50, "units": "empl/main",
                    "xType1": "RM", "iRate1": 20,
                    "xType2": "HM", "iRate2": 80,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 15, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Misc shops with manual sales clark input
        {
            "code":"RXM",
            "name":"Misc / specialist shops (man empl cnt)",
            "type":"Retail",
            "default":"m.e.c misc shops",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 20, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 50, "units": "empl/main",
                    "xType1": "RM", "iRate1": 20,
                    "xType2": "HM", "iRate2": 80,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 15, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # HOSPITALITY:
        # Hotels
        {
            "code":"GHT",
            "name":"Hotel (man 'guest-facing' cnt)",
            "type":"Hospitality",
            "default":"hotel",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # Front-line staff
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 50,
                    "xType2": "LF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 8, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 15, "units": "empl/main",
                    "xType1": "RM", "iRate1": 20,
                    "xType2": "HM", "iRate2": 80,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # Drivers, cleaners
                    "fRate": 15, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Restaurant
        {
            "code":"GRX",
            "name":"Restaurant (man 'chef' cnt)",
            "type":"Hospitality",
            "default":"restaurant",
            "iStatic_veh":2,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # Chef
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "MF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":5.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 0, "units": "empl/main",
                    "xType1": "MM", "iRate1": 50,
                    "xType2": "MF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 15, "units": "empl/main",
                    "xType1": "RM", "iRate1": 20,
                    "xType2": "HM", "iRate2": 80,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # Waiters
                    "fRate": 1, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },


#  --  --  --  --  --  --  --  --  --  --  --  --
    # GOVERNANCE:
        # County government
        {
            "code":"4YG",
            "name":"County Government (man i/p @ 1:1000)",
            "type":"Governance",
            "default":"county government",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # CLARK / AGENT
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "LF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "MF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ #  CLEANERS, SECURITY
                    "fRate": 4, "units": "empl/main",
                    "xType1": "PM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # District government
        {
            "code":"3YG",
            "name":"District Government (man i/p @ 1:5k)",
            "type":"Governance",
            "default":"district government",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # CLARK / AGENT
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "MF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "HM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ #  CLEANERS, SECURITY
                    "fRate": 4, "units": "empl/main",
                    "xType1": "PM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Province government
        {
            "code":"2YG",
            "name":"Provincial Government (man i/p @ 1:13k)",
            "type":"Governance",
            "default":"provincial government",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # CLARK / AGENT
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "HM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ #  CLEANERS, SECURITY
                    "fRate": 4, "units": "empl/main",
                    "xType1": "PM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Federal government
        {
            "code":"1YG",
            "name":"Federal Government (man i/p @ 1:100k)",
            "type":"Governance",
            "default":"federal government",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # CLARK / AGENT
                    "fRate":1, "units":"empl",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "HM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ #  CLEANERS, SECURITY
                    "fRate": 4, "units": "empl/main",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "MF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # HEALTH-CARE:
        # County hospital
        {
            "code":"4YH",
            "name":"County Hospital (man i/p @ 1:2000)",
            "type":"Health & Safety",
            "default":"county hospital",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # DOCTORS
                    "fRate":1, "units":"empl",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # NURSES (MF); CLEANERS
                    "fRate": 4, "units": "empl/main",
                    "xType1": "MF", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # District hospital
        {
            "code":"3YH",
            "name":"District Hospital (man i/p @ 1:10k)",
            "type":"Health & Safety",
            "default":"district hospital",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # DOCTORS
                    "fRate":1, "units":"empl",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # NURSES (MF); CLEANERS
                    "fRate": 4, "units": "empl/main",
                    "xType1": "MF", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Provincial hospital
        {
            "code":"2YH",
            "name":"Provincial Hospital (man i/p @ 1:20k)",
            "type":"Health & Safety",
            "default":"provincial hospital",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # DOCTORS
                    "fRate":1, "units":"empl",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # NURSES (MF); CLEANERS
                    "fRate": 4, "units": "empl/main",
                    "xType1": "MF", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },


        # Ambulance crews
        {
            "code":"HAM",
            "name":"Ambulance crews (man i/p @ 1:5k)",
            "type":"Health & Safety",
            "default":"ambulance crews",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # PARAMEDICS
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "LF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":3.0,
                },
                # SPECIALIST
                "aSupv":{       # DOCTOR ON CALL
                    "fRate": 10, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # DESPATCH
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Rescue services
        {
            "code":"SOS",
            "name":"Rescue services (road accidents in the jungle)",
            "type":"Health & Safety",
            "default":"pvt rescue services",
            "iStatic_veh":3,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # PARAMEDICS
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "LF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":2.0,
                },
                # SPECIALIST
                "aSupv":{       # DOCTOR ON CALL
                    "fRate": 10, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 30, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # DESPATCH
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # EDUCATION:
        # ED4 (private school)
        {
            "code":"ED4",
            "name":"Private school ED4 (man i/p @ 1:15 ~ 1:20)",
            "type":"Education",
            "default":"private school",
            "iStatic_veh":5,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # TEACHERS
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 33,
                    "xType2": "MF", "iRate2": 64,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },

                "aSupv":{       # HEAD OF DEPARTAMENT
                    "fRate": 5, "units": "empl/main",
                    "xType1": "MM", "iRate1": 33,
                    "xType2": "MF", "iRate2": 64,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # CLEANERS, HANDYMEN
                    "fRate": 4, "units": "empl/main",
                    "xType1": "MF", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # ED9 (disabled school)
        {
            "code":"ED9",
            "name":"Disabled school ED9 (man i/p @ 1:4 ~ 1:10)",
            "type":"Education",
            "default":"disabled school",
            "iStatic_veh":5,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # TEACHERS
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 33,
                    "xType2": "MF", "iRate2": 64,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },

                "aSupv":{       # HEAD OF DEPARTAMENT
                    "fRate": 5, "units": "empl/main",
                    "xType1": "MM", "iRate1": 33,
                    "xType2": "MF", "iRate2": 64,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 100, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # CLEANERS, HANDYMEN
                    "fRate": 4, "units": "empl/main",
                    "xType1": "MF", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },


#  --  --  --  --  --  --  --  --  --  --  --  --
    # PRISON:
        # County prison
        {
            "code":"4YX",
            "name":"County prison (man i/p @ 1:5 of 70%)",
            "type":"Justice",
            "default":"county prison",
            "iStatic_veh":2,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # GUARDS
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "LF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{       # SUPERVISORS
                    "fRate": 10, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 40, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # MISC
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # District prison
        {
            "code":"3YX",
            "name":"district prison (man i/p @ 1:5 of 20%)",
            "type":"Justice",
            "default":"district prison",
            "iStatic_veh":2,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # GUARDS
                    "fRate":1, "units":"empl",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "LF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{       # SUPERVISORS
                    "fRate": 10, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 40, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # MISC
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Provincial prison
        {
            "code":"2YX",
            "name":"provincial prison (man i/p @ 1:5 of 7%)",
            "type":"Justice",
            "default":"provincial prison",
            "iStatic_veh":2,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # GUARDS
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "MF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{       # SUPERVISORS
                    "fRate": 10, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 40, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # MISC
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Provincial prison
        {
            "code":"1YX",
            "name":"federal prison (man i/p @ 1:4 of 3%)",
            "type":"Justice",
            "default":"federal prison",
            "iStatic_veh":2,
            "sOwn_number_plates": "dynamic",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{       # GUARDS
                    "fRate":1, "units":"empl",
                    "xType1": "MM", "iRate1": 75,
                    "xType2": "MF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # SPECIALIST
                "aSupv":{       # SUPERVISORS
                    "fRate": 10, "units": "empl/main",
                    "xType1": "HM", "iRate1": 75,
                    "xType2": "HF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 0.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 40, "units": "empl/main",
                    "xType1": "MM", "iRate1": 66,
                    "xType2": "HM", "iRate2": 34,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # MISC
                    "fRate": 20, "units": "empl/main",
                    "xType1": "LM", "iRate1": 75,
                    "xType2": "PF", "iRate2": 25,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

#  --  --  --  --  --  --  --  --  --  --  --  --
    # LOGISTICS:
        # Freight station
        {
            "code":"QF1",
            "name":"Freight Train Station",
            "type":"Logistics (DON'T USE: GO VIA 'STATIONS' MENU)",
            "default":"freight train station",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{ # PLATFORM HANDS (Loading the train)
                    "fRate":1, "units":"empl",        # Labour assigned by hand
                    "xType1": "PM", "iRate1": 99,
                    "xType2": "PF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 8, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 35, "units": "empl/main",
                    "xType1": "MM", "iRate1": 95,
                    "xType2": "HM", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Passanger station
        {
            "code":"QP1",
            "name":"Passanger Train Station",
            "type":"Logistics (DON'T USE: GO VIA 'STATIONS' MENU)",
            "default":"pax train station",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{ # TICKET SELLERS (2 min per pax)
                    "fRate":1, "units":"empl",        # Labour assigned by hand
                    "xType1": "PM", "iRate1": 50,
                    "xType2": "PF", "iRate2": 50,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.0,
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{ # CONDUCTOR
                    "fRate": 8, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{ # STATION MASTER AND ASSISTANTS
                    "fRate": 35, "units": "empl/main",
                    "xType1": "MM", "iRate1": 95,
                    "xType2": "HM", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{ # SECURITY CLEANERS
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Truck depot
        {
            "code":"QT1",
            "name":"Truck Depot (20t/trip)",
            "type":"Logistics (DON'T USE: GO VIA 'STATIONS' MENU)",
            "default":"truck depot",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{ # TRUCK DRIVER
                    "fRate":1, "units":"empl",        # Labour assigned by hand
                    "xType1": "PM", "iRate1": 99,
                    "xType2": "PF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0.5,              # Tractor and trailer
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 10, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0              # Passanger car
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 35, "units": "empl/main",
                    "xType1": "MM", "iRate1": 95,
                    "xType2": "HM", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0              # Mechanic
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Bus service
        {
            "code":"QB1",
            "name":"Bus station",
            "type":"Logistics (DON'T USE: GO VIA 'STATIONS' MENU)",
            "default":"bus station",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{ # BUS DRIVER
                    "fRate":1, "units":"empl",        # Labour assigned by hand
                    "xType1": "PM", "iRate1": 99,
                    "xType2": "PF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":1,                # Bus
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{
                    "fRate": 10, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0              # Passanger car
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 35, "units": "empl/main",
                    "xType1": "MM", "iRate1": 95,
                    "xType2": "HM", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0              # Mechanic
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Freight aircraft
        {
            "code":"QG1",
            "name":"Freight Aircraft (5t/trip), (3-men crew), (enter 'pilots')",
            "type":"Logistics (DON'T USE: GO VIA 'STATIONS' MENU)",
            "default":"freight aircraft",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{ # PILOTS
                    "fRate":1, "units":"empl",        # Labour assigned by hand
                    "xType1": "MM", "iRate1": 64,
                    "xType2": "LM", "iRate2": 33,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,                # Don't use company cars.
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{   # LOGISTICS SUPPORT
                    "fRate": 10, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0              # Passanger car
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 35, "units": "empl/main",
                    "xType1": "MM", "iRate1": 95,
                    "xType2": "HM", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{  # LOADING HANDS
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0              # Loaders
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

        # Pax aircraft
        {
            "code":"QA1",
            "name":"Passanger aircraft (man i/p of 'pilots')",
            "type":"Logistics (DON'T USE: GO VIA 'STATIONS' MENU)",
            "default":"passanger aircraft",
            "iStatic_veh":1,
            "sOwn_number_plates": "none",         # County Number plates
            "aaLabour":{                        # Descibes 4 levels of workforce
                # Linked to other statistics
                "aMain":{ # PILOTS
                    "fRate":1, "units":"empl",        # Labour assigned by hand
                    "xType1": "MM", "iRate1": 64,
                    "xType2": "LM", "iRate2": 33,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh":0,                # Don't use company cars.
                },
                # This position is a supervisor over the main worker. If the
                # position is not used, enter '0' for 'fRate'
                "aSupv":{   # LOGISTICS SUPPORT
                    "fRate": 10, "units": "empl/main",
                    "xType1": "LM", "iRate1": 99,
                    "xType2": "LF", "iRate2":  1,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0              # Passanger car
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aMgmt":{
                    "fRate": 35, "units": "empl/main",
                    "xType1": "MM", "iRate1": 95,
                    "xType2": "HM", "iRate2":  5,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 1.0
                },
                # This position is a runs the operation. If the
                # position is not used, enter '0' for 'fRate'
                "aSupt":{  # LOADING HANDS
                    "fRate": 60, "units": "empl/main",
                    "xType1": "PM", "iRate1": 60,
                    "xType2": "PF", "iRate2": 40,     # iRate1 + iRate2 = 100
                    "fEmpl_per_veh": 3.0              # Loaders
                },
            },
            "lResource":[
                # What are the resources produced
                {"name":"None",
                "fRate":0, "units":"-",
                "fMin_yield":0.9, "fMax_yield":1.1,
                "fStore_capacity":0
                },
            ],
        },

    ]

    import modules.x_database as db
    ccTremb = db.connect()
    cWorkplaces_const = db.workplaces_const(ccTremb)

    dQuery = cWorkplaces_const.delete_many({})
    print("\n{0} items deleted".format(dQuery.deleted_count))

    for x in lThe_data:
        cWorkplaces_const.insert_one(x)
#        dWorkplaces_const = {x:aThe_data[x]}
#        cWorkplaces_const.insert_one(dWorkplaces_const)
    print("Workplaces ADDED / REPLACED")
